use nih_plug::params::enums::Enum;
//use rand::{rngs::StdRng, Rng, SeedableRng};
use rand::Rng;
use serde::{Deserialize, Serialize};
//use std::f32::consts::{self, FRAC_2_PI, PI};

// Make a lookup table for faster but less accurate sine approx for additive
const TABLE_SIZE: usize = 512;
/*
fn generate_sine_table() -> [f32; TABLE_SIZE] {
    let mut table = [0.0; TABLE_SIZE];
    for i in 0..TABLE_SIZE {
        let phase = (i as f32 / TABLE_SIZE as f32) * PI * 2.0;
        table[i] = phase.sin();
    }
    table
}

fn generate_saw_table() -> [f32; TABLE_SIZE] {
    let mut table = [0.0; TABLE_SIZE];
    for i in 0..TABLE_SIZE {
        let phase = i as f32 / (TABLE_SIZE - 1) as f32;
        table[i] = -1.0 + 2.0 * phase;
    }
    table
}

fn generate_wsaw_table_1() -> [f32; TABLE_SIZE] {
    let mut table = [0.0; TABLE_SIZE];
    let mut rng = StdRng::seed_from_u64(38);  // Use a fixed seed
    for i in 0..TABLE_SIZE {
        let phase = i as f32 / (TABLE_SIZE - 1) as f32;
        // Introduce deterministic randomness to the waveform
        let randomness = rng.gen_range(-0.1..0.1);  // Adjust the range of randomness
        table[i] = -1.0 + 2.0 * (phase + randomness);
    }
    table
}

fn generate_wsaw_table_2() -> [f32; TABLE_SIZE] {
    let mut table = [0.0; TABLE_SIZE];
    let mut rng = StdRng::seed_from_u64(57);  // Use a fixed seed
    for i in 0..TABLE_SIZE {
        let phase = i as f32 / (TABLE_SIZE - 1) as f32;
        // Introduce deterministic randomness to the waveform
        let randomness = rng.gen_range(-0.1..0.1);  // Adjust the range of randomness
        table[i] = -1.0 + 2.0 * (phase + randomness);
    }
    table
}

fn generate_ssaw_table_1() -> [f32; TABLE_SIZE] {
    let mut table = [0.0; TABLE_SIZE];
    let mut rng = StdRng::seed_from_u64(22);  // Use a fixed seed
    for i in 0..TABLE_SIZE {
        let phase = i as f32 / (TABLE_SIZE - 1) as f32;
        // Introduce deterministic randomness to the waveform
        let randomness = rng.gen_range(-0.01..0.01);  // Adjust the range of randomness
        table[i] = -1.0 + 2.0 * (phase + randomness);
    }
    table
}

fn generate_ssaw_table_2() -> [f32; TABLE_SIZE] {
    let mut table = [0.0; TABLE_SIZE];
    let mut rng = StdRng::seed_from_u64(17);  // Use a fixed seed
    for i in 0..TABLE_SIZE {
        let phase = i as f32 / (TABLE_SIZE - 1) as f32;
        // Introduce deterministic randomness to the waveform
        let randomness = rng.gen_range(-0.01..0.01);  // Adjust the range of randomness
        table[i] = -1.0 + 2.0 * (phase + randomness);
    }
    table
}

fn generate_asaw_table_1() -> [f32; TABLE_SIZE] {
    let mut table = [0.0; TABLE_SIZE];
    let mut rng = StdRng::seed_from_u64(44);  // Use a fixed seed
    let rounding_amount: i32 = 30; // Adjust the rounding amount as needed

    for i in 0..TABLE_SIZE {
        let phase = i as f32 / (TABLE_SIZE - 1) as f32;
        // Introduce deterministic randomness to the waveform
        let randomness = rng.gen_range(-0.009..0.009);  // Adjust the range of randomness

        let scaled_phase = -1.0 + 2.0 * (phase + randomness);

        // Calculate the rounded sawtooth waveform directly
        table[i] = scaled_phase * (1.0 - scaled_phase.powi(2 * rounding_amount));
    }

    table
}

fn generate_asaw_table_2() -> [f32; TABLE_SIZE] {
    let mut table = [0.0; TABLE_SIZE];
    let mut rng = StdRng::seed_from_u64(44);  // Use a fixed seed
    let rounding_amount: i32 = 30; // Adjust the rounding amount as needed

    for i in 0..TABLE_SIZE {
        let phase = i as f32 / (TABLE_SIZE - 1) as f32;
        // Introduce deterministic randomness to the waveform
        let randomness = rng.gen_range(-0.008..0.008);  // Adjust the range of randomness

        let scaled_phase = -1.0 + 2.0 * (phase + randomness);

        // Calculate the rounded sawtooth waveform directly
        table[i] = scaled_phase * (1.0 - scaled_phase.powi(2 * rounding_amount));
    }

    table
}

fn generate_asaw_table_3() -> [f32; TABLE_SIZE] {
    let mut table = [0.0; TABLE_SIZE];
    let mut rng = StdRng::seed_from_u64(44);  // Use a fixed seed
    let rounding_amount: i32 = 32; // Adjust the rounding amount as needed

    for i in 0..TABLE_SIZE {
        let phase = i as f32 / (TABLE_SIZE - 1) as f32;
        // Introduce deterministic randomness to the waveform
        let randomness = rng.gen_range(-0.01..0.01);  // Adjust the range of randomness

        let scaled_phase = -1.0 + 2.0 * (phase + randomness);

        // Calculate the rounded sawtooth waveform directly
        table[i] = scaled_phase * (1.0 - scaled_phase.powi(2 * rounding_amount));
    }

    table
}

fn generate_rsaw_table() -> [f32; TABLE_SIZE] {
    let mut table = [0.0; TABLE_SIZE];
    let rounding_amount: i32 = 15; // Adjust the rounding amount as needed
    for i in 0..TABLE_SIZE {
        let phase = i as f32 / (TABLE_SIZE - 1) as f32;
        let scaled_phase = -1.0 + 2.0 * phase;
        // Calculate the rounded sawtooth waveform directly
        table[i] = scaled_phase * (1.0 - scaled_phase.powi(2 * rounding_amount));
    }

    table
}

fn generate_ramp_table() -> [f32; TABLE_SIZE] {
    let mut table = [0.0; TABLE_SIZE];
    for i in 0..TABLE_SIZE {
        let phase = i as f32 / (TABLE_SIZE - 1) as f32;
        let scaled_phase = -1.0 + 2.0 * phase;
        // Calculate the ramp wave directly
        table[i] = -scaled_phase % consts::TAU;
    }

    table
}

fn generate_square_table() -> [f32; TABLE_SIZE] {
    let mut table = [0.0; TABLE_SIZE];

    for i in 0..TABLE_SIZE {
        let phase = i as f32 / (TABLE_SIZE - 1) as f32;

        // Calculate the square wave directly
        if phase < 0.5 {
            table[i] = 1.0;  // Positive phase half
        } else {
            table[i] = -1.0;  // Negative phase half
        }
    }

    table
}

fn generate_pulse_table() -> [f32; TABLE_SIZE] {
    let mut table = [0.0; TABLE_SIZE];

    for i in 0..TABLE_SIZE {
        let phase = i as f32 / (TABLE_SIZE - 1) as f32;

        // Calculate the pulse wave directly
        if phase < 0.25 {
            table[i] = 1.0;  // Positive phase quarter
        } else {
            table[i] = -1.0;  // Negative phase three-quarters
        }
    }

    table
}

fn generate_rsquare_table() -> [f32; TABLE_SIZE] {
    let mut table = [0.0; TABLE_SIZE];
    let mod_amount: f32 = 0.15;
    let mod_scaled: i32 = scale_range(mod_amount, 2.0, 8.0).floor() as i32 * 2;

    for i in 0..TABLE_SIZE {
        let phase = i as f32 / (TABLE_SIZE - 1) as f32;
        let scaled_phase = -1.0 + 2.0 * phase;

        // Calculate the rounded square wave directly
        if scaled_phase < 0.0 {
            table[i] = (2.0 * scaled_phase + 1.0).powi(mod_scaled) - 1.0;
        } else {
            table[i] = -(2.0 * scaled_phase - 1.0).powi(mod_scaled) + 1.0;
        }
    }

    table
}

fn generate_tri_table() -> [f32; TABLE_SIZE] {
    let mut table = [0.0; TABLE_SIZE];

    for i in 0..TABLE_SIZE {
        let phase = i as f32 / (TABLE_SIZE - 1) as f32;
        let tri = (FRAC_2_PI) * (((2.0 * PI) * phase).sin()).asin();

        // Store the calculated triangle wave value in the table
        table[i] = tri;
    }

    table
}
*/

/*
lazy_static! {
    // Generating waveform tables
    static ref SIN_TABLE: [f32; TABLE_SIZE] = {
        let mut table = [0.0; TABLE_SIZE];
        for i in 0..TABLE_SIZE {
            let phase = (i as f32 / TABLE_SIZE as f32) * std::f32::consts::PI * 2.0;
            table[i] = phase.sin();
        }
        table
    };
    static ref SAW_TABLE: [f32; TABLE_SIZE] = {
        let mut table = [0.0; TABLE_SIZE];
        for i in 0..TABLE_SIZE {
            let phase = i as f32 / (TABLE_SIZE - 1) as f32;  // Adjusted phase calculation
            // Calculate the sawtooth waveform directly
            table[i] = -1.0 + 2.0 * phase;
        }
        table
    };
    // These are for creating an "analog saw" by rotating at random between WSAW tables
    static ref WSAW_TABLE_1: [f32; TABLE_SIZE] = {
        let mut table = [0.0; TABLE_SIZE];
        let mut rng = StdRng::seed_from_u64(38);  // Use a fixed seed

        for i in 0..TABLE_SIZE {
            let phase = i as f32 / (TABLE_SIZE - 1) as f32;

            // Introduce deterministic randomness to the waveform
            let randomness = rng.gen_range(-0.1..0.1);  // Adjust the range of randomness
            table[i] = -1.0 + 2.0 * (phase + randomness);
        }
        table
    };
    static ref WSAW_TABLE_2: [f32; TABLE_SIZE] = {
        let mut table = [0.0; TABLE_SIZE];
        let mut rng = StdRng::seed_from_u64(57);  // Use a fixed seed

        for i in 0..TABLE_SIZE {
            let phase = i as f32 / (TABLE_SIZE - 1) as f32;

            // Introduce deterministic randomness to the waveform
            let randomness = rng.gen_range(-0.1..0.1);  // Adjust the range of randomness
            table[i] = -1.0 + 2.0 * (phase + randomness);
        }
        table
    };
    // These are for creating an "analog saw" by rotating at random between WSAW tables
    static ref SSAW_TABLE_1: [f32; TABLE_SIZE] = {
        let mut table = [0.0; TABLE_SIZE];
        let mut rng = StdRng::seed_from_u64(22);  // Use a fixed seed

        for i in 0..TABLE_SIZE {
            let phase = i as f32 / (TABLE_SIZE - 1) as f32;

            // Introduce deterministic randomness to the waveform
            let randomness = rng.gen_range(-0.01..0.01);  // Adjust the range of randomness
            table[i] = -1.0 + 2.0 * (phase + randomness);
        }
        table
    };
    static ref SSAW_TABLE_2: [f32; TABLE_SIZE] = {
        let mut table = [0.0; TABLE_SIZE];
        let mut rng = StdRng::seed_from_u64(17);  // Use a fixed seed

        for i in 0..TABLE_SIZE {
            let phase = i as f32 / (TABLE_SIZE - 1) as f32;

            // Introduce deterministic randomness to the waveform
            let randomness = rng.gen_range(-0.01..0.01);  // Adjust the range of randomness
            table[i] = -1.0 + 2.0 * (phase + randomness);
        }
        table
    };
    // Combine the SSAW technique with the RSAW function
    // "A for Analog"
    static ref ASAW_TABLE_1: [f32; TABLE_SIZE] = {
        let mut table = [0.0; TABLE_SIZE];
        let mut rng = StdRng::seed_from_u64(44);  // Use a fixed seed
        let rounding_amount: i32 = 30; // Adjust the rounding amount as needed

        for i in 0..TABLE_SIZE {
            let phase = i as f32 / (TABLE_SIZE - 1) as f32;
            // Introduce deterministic randomness to the waveform
            let randomness = rng.gen_range(-0.009..0.009);  // Adjust the range of randomness

            let scaled_phase = -1.0 + 2.0 * (phase + randomness);

            // Calculate the rounded sawtooth waveform directly
            table[i] = scaled_phase * (1.0 - scaled_phase.powi(2 * rounding_amount));
        }

        table
    };
    static ref ASAW_TABLE_2: [f32; TABLE_SIZE] = {
        let mut table = [0.0; TABLE_SIZE];
        let mut rng = StdRng::seed_from_u64(44);  // Use a fixed seed
        let rounding_amount: i32 = 30; // Adjust the rounding amount as needed

        for i in 0..TABLE_SIZE {
            let phase = i as f32 / (TABLE_SIZE - 1) as f32;
            // Introduce deterministic randomness to the waveform
            let randomness = rng.gen_range(-0.008..0.008);  // Adjust the range of randomness

            let scaled_phase = -1.0 + 2.0 * (phase + randomness);

            // Calculate the rounded sawtooth waveform directly
            table[i] = scaled_phase * (1.0 - scaled_phase.powi(2 * rounding_amount));
        }

        table
    };
    static ref ASAW_TABLE_3: [f32; TABLE_SIZE] = {
        let mut table = [0.0; TABLE_SIZE];
        let mut rng = StdRng::seed_from_u64(44);  // Use a fixed seed
        let rounding_amount: i32 = 32; // Adjust the rounding amount as needed

        for i in 0..TABLE_SIZE {
            let phase = i as f32 / (TABLE_SIZE - 1) as f32;
            // Introduce deterministic randomness to the waveform
            let randomness = rng.gen_range(-0.01..0.01);  // Adjust the range of randomness

            let scaled_phase = -1.0 + 2.0 * (phase + randomness);

            // Calculate the rounded sawtooth waveform directly
            table[i] = scaled_phase * (1.0 - scaled_phase.powi(2 * rounding_amount));
        }

        table
    };
    static ref RSAW_TABLE: [f32; TABLE_SIZE] = {
        let mut table = [0.0; TABLE_SIZE];
        let rounding_amount: i32 = 15; // Adjust the rounding amount as needed

        for i in 0..TABLE_SIZE {
            let phase = i as f32 / (TABLE_SIZE - 1) as f32;
            let scaled_phase = -1.0 + 2.0 * phase;

            // Calculate the rounded sawtooth waveform directly
            table[i] = scaled_phase * (1.0 - scaled_phase.powi(2 * rounding_amount));
        }

        table
    };
    static ref RAMP_TABLE: [f32; TABLE_SIZE] = {
        let mut table = [0.0; TABLE_SIZE];

        for i in 0..TABLE_SIZE {
            let phase = i as f32 / (TABLE_SIZE - 1) as f32;
            let scaled_phase = -1.0 + 2.0 * phase;

            // Calculate the ramp wave directly
            table[i] = -scaled_phase % consts::TAU;
        }

        table
    };
    static ref SQUARE_TABLE: [f32; TABLE_SIZE] = {
        let mut table = [0.0; TABLE_SIZE];

        for i in 0..TABLE_SIZE {
            let phase = i as f32 / (TABLE_SIZE - 1) as f32;

            // Calculate the square wave directly
            if phase < 0.5 {
                table[i] = 1.0;  // Positive phase half
            } else {
                table[i] = -1.0;  // Negative phase half
            }
        }

        table
    };
    static ref PULSE_TABLE: [f32; TABLE_SIZE] = {
        let mut table = [0.0; TABLE_SIZE];

        for i in 0..TABLE_SIZE {
            let phase = i as f32 / (TABLE_SIZE - 1) as f32;

            // Calculate the pulse wave directly
            if phase < 0.25 {
                table[i] = 1.0;  // Positive phase quarter
            } else {
                table[i] = -1.0;  // Negative phase three-quarters
            }
        }

        table
    };
    static ref RSQUARE_TABLE: [f32; TABLE_SIZE] = {
        let mut table = [0.0; TABLE_SIZE];
        let mod_amount: f32 = 0.15;
        let mod_scaled: i32 = scale_range(mod_amount, 2.0, 8.0).floor() as i32 * 2;

        for i in 0..TABLE_SIZE {
            let phase = i as f32 / (TABLE_SIZE - 1) as f32;
            let scaled_phase = -1.0 + 2.0 * phase;

            // Calculate the rounded square wave directly
            if scaled_phase < 0.0 {
                table[i] = (2.0 * scaled_phase + 1.0).powi(mod_scaled) - 1.0;
            } else {
                table[i] = -(2.0 * scaled_phase - 1.0).powi(mod_scaled) + 1.0;
            }
        }

        table
    };
    static ref TRI_TABLE: [f32; TABLE_SIZE] = {
        let mut table = [0.0; TABLE_SIZE];

        for i in 0..TABLE_SIZE {
            let phase = i as f32 / (TABLE_SIZE - 1) as f32;
            let tri = (FRAC_2_PI) * (((2.0 * PI) * phase).sin()).asin();

            // Store the calculated triangle wave value in the table
            table[i] = tri;
        }

        table
    };
}
*/
const SIN_TABLE: [f32; 512] = [
    0.0,0.012271538,0.024541229,0.036807224,0.049067676,0.06132074,0.07356457,0.08579732,0.09801714,0.110222206,0.12241068,0.13458072,0.14673047,0.15885815,0.1709619,0.18303989,0.19509032,0.20711139,0.21910124,0.23105812,0.2429802,0.25486568,0.26671278,0.2785197,0.2902847,0.30200595,0.31368175,0.32531032,0.33688986,0.34841868,0.35989505,0.3713172,0.38268346,0.39399207,0.40524134,0.41642958,0.42755508,0.43861625,0.44961134,0.46053872,0.47139674,0.48218375,0.49289823,0.50353837,0.51410276,0.5245897,0.5349976,0.545325,0.55557024,0.5657318,0.5758082,0.5857979,0.5956993,0.605511,0.61523163,0.6248595,0.63439333,0.64383155,0.65317285,0.6624158,0.671559,0.680601,0.68954057,0.6983763,0.70710677,0.71573085,0.7242471,0.7326543,0.7409512,0.7491364,0.7572089,0.7651673,0.77301043,0.7807373,0.7883464,0.7958369,0.8032075,0.81045717,0.8175848,0.8245893,0.83146966,0.8382247,0.8448536,0.8513552,0.85772866,0.86397284,0.87008697,0.87607014,0.8819213,0.88763964,0.8932243,0.8986745,0.9039893,0.909168,0.9142098,0.9191139,0.9238795,0.9285061,0.9329928,0.937339,0.94154406,0.94560736,0.9495282,0.953306,0.95694035,0.96043056,0.96377605,0.96697646,0.97003126,0.97293997,0.9757021,0.9783174,0.9807853,0.9831055,0.98527765,0.9873014,0.9891765,0.99090266,0.99247956,0.993907,0.9951847,0.9963126,0.99729043,0.9981181,0.99879545,0.9993224,0.9996988,0.9999247,1.0,0.9999247,0.9996988,0.99932235,0.99879545,0.9981181,0.99729043,0.9963126,0.9951847,0.993907,0.9924795,0.9909026,0.9891765,0.9873014,0.98527765,0.9831055,0.98078525,0.9783174,0.9757021,0.9729399,0.97003126,0.96697646,0.96377605,0.9604305,0.9569403,0.953306,0.94952816,0.9456073,0.94154406,0.93733895,0.9329928,0.9285061,0.9238795,0.9191139,0.9142097,0.909168,0.9039893,0.8986744,0.8932243,0.8876396,0.88192123,0.87607,0.870087,0.86397284,0.8577286,0.85135514,0.8448535,0.83822465,0.83146954,0.8245893,0.8175848,0.81045717,0.8032075,0.79583687,0.78834635,0.7807371,0.7730105,0.76516724,0.7572088,0.7491363,0.74095106,0.73265415,0.724247,0.71573085,0.70710677,0.69837624,0.6895405,0.68060094,0.67155886,0.6624156,0.65317285,0.64383155,0.6343933,0.62485945,0.6152315,0.60551095,0.59569913,0.58579785,0.57580817,0.56573176,0.5555702,0.54532486,0.53499746,0.52458954,0.51410276,0.50353837,0.49289814,0.4821837,0.47139663,0.46053857,0.44961137,0.43861625,0.42755505,0.4164295,0.40524122,0.39399192,0.38268328,0.37131724,0.35989505,0.34841865,0.3368898,0.3253102,0.3136816,0.3020058,0.29028472,0.2785197,0.26671273,0.2548656,0.24298008,0.23105797,0.21910107,0.2071114,0.19509031,0.18303984,0.17096181,0.15885803,0.14673033,0.13458052,0.1224107,0.1102222,0.0980171,0.08579723,0.07356445,0.061320584,0.049067486,0.03680724,0.02454121,0.012271485,-0.00000008742278,-0.01227166,-0.024541385,-0.036807414,-0.04906766,-0.06132076,-0.07356462,-0.08579741,-0.09801727,-0.11022237,-0.12241087,-0.1345807,-0.1467305,-0.15885821,-0.17096199,-0.18304002,-0.19509049,-0.20711157,-0.21910124,-0.23105814,-0.24298024,-0.25486577,-0.2667129,-0.27851987,-0.29028487,-0.30200595,-0.31368178,-0.32531035,-0.33688995,-0.3484188,-0.3598952,-0.3713174,-0.38268343,-0.39399207,-0.4052414,-0.41642967,-0.42755523,-0.4386164,-0.4496115,-0.46053872,-0.47139677,-0.48218384,-0.4928983,-0.5035385,-0.5141029,-0.52458966,-0.53499764,-0.54532504,-0.5555703,-0.5657319,-0.57580835,-0.585798,-0.5956993,-0.60551107,-0.61523163,-0.6248596,-0.6343934,-0.6438317,-0.65317297,-0.6624158,-0.671559,-0.68060106,-0.6895406,-0.69837636,-0.7071069,-0.71573097,-0.7242471,-0.7326543,-0.7409512,-0.74913645,-0.75720876,-0.76516724,-0.77301043,-0.7807372,-0.78834647,-0.7958369,-0.8032076,-0.8104573,-0.81758493,-0.82458943,-0.8314698,-0.8382249,-0.84485376,-0.8513554,-0.85772854,-0.86397284,-0.87008697,-0.8760701,-0.8819213,-0.88763964,-0.89322436,-0.89867455,-0.9039894,-0.90916806,-0.91420984,-0.919114,-0.9238797,-0.928506,-0.93299276,-0.937339,-0.94154406,-0.9456073,-0.9495282,-0.9533061,-0.95694035,-0.96043056,-0.9637761,-0.9669765,-0.9700313,-0.97294,-0.9757022,-0.9783173,-0.98078525,-0.9831055,-0.98527765,-0.9873014,-0.9891765,-0.99090266,-0.99247956,-0.993907,-0.9951847,-0.9963126,-0.9972905,-0.9981181,-0.99879545,-0.99932235,-0.9996988,-0.9999247,-1.0,-0.9999247,-0.9996988,-0.99932235,-0.99879545,-0.9981181,-0.99729043,-0.9963126,-0.9951847,-0.9939069,-0.9924795,-0.99090266,-0.9891765,-0.9873014,-0.98527765,-0.9831055,-0.98078525,-0.9783173,-0.9757021,-0.9729399,-0.9700312,-0.9669764,-0.963776,-0.96043044,-0.95694023,-0.9533061,-0.9495282,-0.9456073,-0.94154406,-0.937339,-0.93299276,-0.928506,-0.92387944,-0.91911376,-0.91420966,-0.9091679,-0.90398914,-0.8986743,-0.8932241,-0.88763964,-0.8819213,-0.8760701,-0.87008697,-0.86397284,-0.85772854,-0.85135514,-0.84485346,-0.8382246,-0.8314695,-0.82458913,-0.81758463,-0.810457,-0.8032076,-0.7958369,-0.7883464,-0.7807372,-0.77301043,-0.76516724,-0.75720876,-0.74913627,-0.740951,-0.7326541,-0.7242469,-0.7157306,-0.70710653,-0.698376,-0.6895406,-0.680601,-0.671559,-0.66241574,-0.6531728,-0.6438315,-0.63439316,-0.62485933,-0.61523145,-0.60551083,-0.5956991,-0.5857976,-0.5758079,-0.5657315,-0.5555703,-0.54532504,-0.53499764,-0.52458966,-0.5141027,-0.5035383,-0.49289808,-0.4821836,-0.47139654,-0.46053848,-0.44961107,-0.43861595,-0.4275548,-0.41642922,-0.40524137,-0.39399207,-0.38268343,-0.37131715,-0.35989496,-0.34841856,-0.3368897,-0.3253101,-0.31368154,-0.3020057,-0.2902844,-0.27851936,-0.2667124,-0.2548653,-0.24298023,-0.23105812,-0.21910122,-0.20711131,-0.19509023,-0.18303975,-0.17096172,-0.15885794,-0.14673024,-0.13458045,-0.12241037,-0.11022187,-0.09801677,-0.08579691,-0.0735646,-0.061320737,-0.04906764,-0.036807153,-0.024541123,-0.012271399
];
const SAW_TABLE: [f32; 512] = [
    -1.0,-0.9960861,-0.99217224,-0.9882583,-0.9843444,-0.98043054,-0.9765166,-0.9726027,-0.96868885,-0.96477497,-0.9608611,-0.95694715,-0.95303327,-0.9491194,-0.94520545,-0.9412916,-0.9373777,-0.9334638,-0.92954993,-0.925636,-0.9217221,-0.91780823,-0.9138943,-0.9099804,-0.90606654,-0.90215266,-0.8982388,-0.89432484,-0.89041096,-0.8864971,-0.88258314,-0.87866926,-0.8747554,-0.8708415,-0.8669276,-0.8630137,-0.8590998,-0.8551859,-0.851272,-0.8473581,-0.8434442,-0.83953035,-0.83561647,-0.83170253,-0.82778865,-0.8238748,-0.81996083,-0.81604695,-0.8121331,-0.8082192,-0.8043053,-0.8003914,-0.7964775,-0.7925636,-0.7886497,-0.7847358,-0.7808219,-0.77690804,-0.77299416,-0.7690802,-0.76516634,-0.76125246,-0.7573385,-0.75342464,-0.74951077,-0.7455969,-0.741683,-0.73776907,-0.7338552,-0.72994125,-0.72602737,-0.7221135,-0.7181996,-0.71428573,-0.71037185,-0.7064579,-0.70254403,-0.6986301,-0.6947162,-0.69080234,-0.68688846,-0.6829746,-0.6790607,-0.67514676,-0.6712329,-0.66731894,-0.66340506,-0.6594912,-0.6555773,-0.6516634,-0.64774954,-0.6438356,-0.6399217,-0.6360078,-0.6320939,-0.62818,-0.62426615,-0.62035227,-0.6164384,-0.61252445,-0.6086106,-0.60469663,-0.60078275,-0.5968689,-0.592955,-0.5890411,-0.58512723,-0.5812133,-0.5772994,-0.5733855,-0.5694716,-0.5655577,-0.56164384,-0.55772996,-0.5538161,-0.54990214,-0.54598826,-0.5420743,-0.53816044,-0.53424656,-0.5303327,-0.5264188,-0.5225049,-0.518591,-0.5146771,-0.51076317,-0.5068493,-0.5029354,-0.49902153,-0.49510765,-0.4911937,-0.48727983,-0.48336595,-0.47945207,-0.47553813,-0.47162426,-0.46771038,-0.4637965,-0.45988256,-0.45596868,-0.4520548,-0.44814092,-0.44422698,-0.4403131,-0.43639922,-0.43248534,-0.4285714,-0.42465752,-0.42074364,-0.41682976,-0.41291583,-0.40900195,-0.40508807,-0.4011742,-0.39726025,-0.39334637,-0.3894325,-0.3855186,-0.38160467,-0.3776908,-0.3737769,-0.36986303,-0.3659491,-0.3620352,-0.35812134,-0.35420746,-0.35029352,-0.34637964,-0.34246576,-0.33855188,-0.33463794,-0.33072406,-0.32681018,-0.3228963,-0.31898236,-0.31506848,-0.3111546,-0.30724072,-0.3033268,-0.2994129,-0.29549903,-0.29158515,-0.2876712,-0.28375733,-0.27984345,-0.27592957,-0.27201563,-0.26810175,-0.26418787,-0.260274,-0.25636005,-0.25244617,-0.2485323,-0.24461842,-0.24070448,-0.2367906,-0.23287672,-0.22896284,-0.2250489,-0.22113502,-0.21722114,-0.21330726,-0.20939332,-0.20547944,-0.20156556,-0.19765168,-0.19373775,-0.18982387,-0.18590999,-0.1819961,-0.17808217,-0.17416829,-0.17025441,-0.16634053,-0.16242659,-0.15851271,-0.15459883,-0.15068495,-0.14677101,-0.14285713,-0.13894325,-0.13502938,-0.13111544,-0.12720156,-0.12328768,-0.1193738,-0.11545986,-0.11154598,-0.1076321,-0.10371822,-0.09980428,-0.0958904,-0.09197652,-0.088062644,-0.084148705,-0.080234826,-0.076320946,-0.07240707,-0.06849313,-0.06457925,-0.06066537,-0.05675149,-0.05283755,-0.04892367,-0.04500979,-0.041095912,-0.037181973,-0.033268094,-0.029354215,-0.025440335,-0.021526396,-0.017612517,-0.0136986375,-0.009784758,-0.005870819,-0.0019569397,0.0019569397,0.005870819,0.0097846985,0.013698578,0.017612576,0.021526456,0.025440335,0.029354215,0.033268094,0.037181973,0.041095853,0.045009732,0.04892373,0.05283761,0.05675149,0.06066537,0.06457925,0.06849313,0.07240701,0.07632089,0.080234885,0.084148765,0.088062644,0.09197652,0.0958904,0.09980428,0.10371816,0.10763204,0.11154604,0.11545992,0.1193738,0.12328768,0.12720156,0.13111544,0.13502932,0.1389432,0.1428572,0.14677107,0.15068495,0.15459883,0.15851271,0.16242659,0.16634047,0.17025435,0.17416835,0.17808223,0.1819961,0.18590999,0.18982387,0.19373775,0.19765162,0.2015655,0.2054795,0.20939338,0.21330726,0.21722114,0.22113502,0.2250489,0.22896278,0.23287666,0.23679066,0.24070454,0.24461842,0.2485323,0.25244617,0.25636005,0.26027393,0.2641878,0.2681018,0.2720157,0.27592957,0.27984345,0.28375733,0.2876712,0.2915851,0.29549897,0.29941297,0.30332685,0.30724072,0.3111546,0.31506848,0.31898236,0.32289624,0.32681012,0.33072412,0.334638,0.33855188,0.34246576,0.34637964,0.35029352,0.3542074,0.35812128,0.36203527,0.36594915,0.36986303,0.3737769,0.3776908,0.38160467,0.38551855,0.38943243,0.39334643,0.3972603,0.4011742,0.40508807,0.40900195,0.41291583,0.4168297,0.42074358,0.42465758,0.42857146,0.43248534,0.43639922,0.4403131,0.44422698,0.44814086,0.45205474,0.45596874,0.45988262,0.4637965,0.46771038,0.47162426,0.47553813,0.479452,0.4833659,0.4872799,0.49119377,0.49510765,0.49902153,0.5029354,0.5068493,0.51076317,0.51467705,0.51859105,0.5225049,0.5264188,0.5303327,0.53424656,0.53816044,0.5420743,0.5459882,0.5499022,0.5538161,0.55772996,0.56164384,0.5655577,0.5694716,0.5733855,0.57729936,0.58121336,0.58512723,0.5890411,0.592955,0.5968689,0.60078275,0.60469663,0.6086105,0.6125245,0.6164384,0.62035227,0.62426615,0.62818,0.6320939,0.6360078,0.63992167,0.64383566,0.64774954,0.6516634,0.6555773,0.6594912,0.66340506,0.66731894,0.6712328,0.6751468,0.6790607,0.6829746,0.68688846,0.69080234,0.6947162,0.6986301,0.702544,0.706458,0.71037185,0.71428573,0.7181996,0.7221135,0.72602737,0.72994125,0.7338551,0.7377691,0.741683,0.7455969,0.74951077,0.75342464,0.7573385,0.7612524,0.7651663,0.7690803,0.77299416,0.77690804,0.7808219,0.7847358,0.7886497,0.79256356,0.79647744,0.80039144,0.8043053,0.8082192,0.8121331,0.81604695,0.81996083,0.8238747,0.8277886,0.8317026,0.83561647,0.83953035,0.8434442,0.8473581,0.851272,0.85518587,0.85909975,0.86301374,0.8669276,0.8708415,0.8747554,0.87866926,0.88258314,0.886497,0.8904109,0.8943249,0.8982388,0.90215266,0.90606654,0.9099804,0.9138943,0.9178082,0.92172205,0.92563605,0.92954993,0.9334638,0.9373777,0.9412916,0.94520545,0.9491193,0.9530332,0.9569472,0.9608611,0.96477497,0.96868885,0.9726027,0.9765166,0.9804305,0.98434436,0.98825836,0.99217224,0.9960861,1.0
];
const WSAW_TABLE_1: [f32; 512] = [
    -1.0553786,-1.1075304,-1.018638,-0.89880604,-1.1689601,-1.054458,-1.0929939,-0.98806906,-0.80542994,-0.83234537,-1.020269,-0.9607918,-1.019622,-1.0504869,-0.823697,-0.9230929,-0.7975079,-1.1243688,-0.9546759,-0.90164655,-0.8607641,-0.90890825,-0.88294256,-1.029111,-0.9318063,-1.0838425,-1.0977135,-0.7912524,-0.9480574,-1.0327568,-1.0064275,-1.0327686,-0.7179868,-0.7183148,-0.79173404,-0.6924694,-0.8835544,-0.8310503,-0.8616785,-0.8508828,-0.8920305,-0.68776757,-0.64021003,-0.91052604,-0.6992672,-0.7298887,-0.7097431,-0.9979874,-0.941699,-0.8304918,-0.79413414,-0.7610129,-0.76983535,-0.9042896,-0.82608587,-0.8801945,-0.773767,-0.9692483,-0.6934818,-0.7970672,-0.8107078,-0.5854001,-0.74174905,-0.65511084,-0.56825465,-0.7196873,-0.59508365,-0.686211,-0.83453345,-0.83275986,-0.8957616,-0.61734533,-0.74180627,-0.765927,-0.54999864,-0.7017685,-0.6378909,-0.5464254,-0.87354463,-0.6716019,-0.713637,-0.518987,-0.57091826,-0.825968,-0.5791848,-0.77949095,-0.6136971,-0.54407233,-0.47949636,-0.640494,-0.81260073,-0.6853585,-0.70589167,-0.53803164,-0.6594906,-0.58662164,-0.603108,-0.6594589,-0.8061056,-0.73806286,-0.656701,-0.65260625,-0.42245775,-0.4541852,-0.45876288,-0.607319,-0.5903151,-0.663354,-0.60129094,-0.42669255,-0.69887316,-0.59252036,-0.5568593,-0.60108995,-0.48865366,-0.7046821,-0.3531807,-0.5644595,-0.6807437,-0.5892238,-0.5160861,-0.49370587,-0.3953128,-0.70528555,-0.42190373,-0.64786565,-0.44337028,-0.5485019,-0.6898371,-0.6894178,-0.4632833,-0.42650354,-0.5011424,-0.5580398,-0.46078718,-0.47680008,-0.29669988,-0.33355612,-0.48787576,-0.54472005,-0.6468214,-0.57093096,-0.29726827,-0.62813985,-0.24471116,-0.2799,-0.40593684,-0.36917198,-0.6180531,-0.51491946,-0.30126405,-0.21775997,-0.20657063,-0.42982787,-0.46861136,-0.26369208,-0.23671645,-0.49868947,-0.43343413,-0.50659657,-0.55097044,-0.41900814,-0.18871814,-0.27227813,-0.38480777,-0.47832978,-0.34210283,-0.44879746,-0.4778306,-0.41157603,-0.1732881,-0.2394256,-0.414546,-0.51218826,-0.16191888,-0.2991711,-0.239492,-0.1738587,-0.4198827,-0.10568273,-0.33782327,-0.4610886,-0.08773196,-0.26339817,-0.1311031,-0.31509918,-0.11503619,-0.2123934,-0.41625774,-0.22897172,-0.23107588,-0.2985744,-0.19783366,-0.23957652,-0.049655735,-0.17569262,-0.42594445,-0.25215238,-0.030229628,-0.34064472,-0.25365597,-0.11389202,-0.3908353,-0.4007957,-0.23769414,-0.14379013,-0.003998816,-0.21989566,-0.01386255,-0.2318942,-0.01923871,-0.08747721,-0.2292794,-0.1416905,-0.22370505,-0.12867379,-0.34233797,-0.023198843,0.045484304,-0.16898322,-0.2012465,-0.23134607,-0.111719966,0.050186872,-0.12196493,-0.056914747,-0.12528127,-0.021437824,0.0054564476,-0.15571761,-0.1974287,-0.17943501,-0.1158278,-0.057376623,-0.27196264,-0.10229999,-0.11412883,-0.04864961,0.11428976,-0.0802744,0.026105642,-0.074691355,-0.04545176,0.04184854,-0.22282791,-0.10215628,0.07296169,-0.1972251,0.15797532,0.13495314,-0.044428885,-0.12268746,-0.05015236,-0.074178934,-0.063133836,0.18951893,0.10912132,0.063813925,0.18413913,0.13996315,-0.017830968,0.084379196,0.07786715,-0.1705423,0.030037522,0.07413077,-0.044605017,-0.006017804,0.23465824,-0.14016497,0.091315866,-0.053622365,-0.065865576,0.1490717,-0.054501534,0.05220294,-0.08506417,-0.10904592,0.2682594,0.095137715,0.028662682,0.20142305,0.19538224,0.07679868,0.20322585,0.09612572,0.28649998,0.16657746,0.1530366,0.226619,0.13388753,0.16620481,0.0720371,0.32384193,0.078740954,0.27150786,0.063408256,0.008474231,0.21481693,0.14749658,0.13075817,0.33136487,0.055321693,0.097158074,-0.0054402947,0.14540231,0.3514917,0.2625289,0.20543444,0.057701707,0.25962865,0.15816736,0.2579912,0.35095346,0.08519161,0.18394148,0.09994495,0.045204878,0.2058258,0.11333537,0.16780746,0.1805706,0.16646338,0.3803048,0.07146263,0.13651347,0.122173905,0.2761755,0.24932861,0.34468782,0.3484732,0.4719211,0.43894565,0.27990937,0.34080255,0.5037991,0.26974797,0.20848584,0.39902282,0.20876741,0.22237563,0.43075395,0.52400696,0.36803997,0.45383942,0.2840587,0.5176405,0.20524895,0.38628125,0.41894412,0.35923004,0.2862283,0.49165976,0.3654847,0.3457991,0.3549435,0.56675637,0.59461987,0.55549943,0.36447704,0.23466551,0.21349609,0.25992036,0.52807415,0.53644705,0.4106002,0.43595684,0.4328848,0.35660827,0.47885025,0.532848,0.6166209,0.48001707,0.5605556,0.4178568,0.66400945,0.33947158,0.37569797,0.47741365,0.4415865,0.60966015,0.3913548,0.6317899,0.3926654,0.5523963,0.35875654,0.65139854,0.52868104,0.5877931,0.6564976,0.41426992,0.67248905,0.5639235,0.6147491,0.6913153,0.37864602,0.35503256,0.60123324,0.5193316,0.5830189,0.6086786,0.56428456,0.64464176,0.4298128,0.5521883,0.7687191,0.66398084,0.78607893,0.46771467,0.777825,0.42566454,0.5608531,0.79744506,0.6042224,0.7221838,0.70248866,0.71917033,0.5335995,0.66751766,0.61872935,0.6151216,0.5346173,0.589417,0.5115584,0.5331975,0.7773942,0.62469494,0.5780052,0.53157675,0.6523098,0.54424214,0.5052041,0.8621558,0.74895644,0.7357223,0.6698531,0.6682898,0.7082195,0.533931,0.8374541,0.6991489,0.8211808,0.61253154,0.68545127,0.8047817,0.675483,0.90006983,0.8695532,0.65398836,0.74229753,0.9418793,0.70558953,0.87572825,0.8343774,0.5951538,0.7123325,0.65725803,0.60530937,0.8302494,0.61374974,0.87282896,0.8575289,0.78509116,0.9649434,0.7608712,0.8478029,0.67091143,0.99559784,0.88187754,0.76669693,0.83519554,0.80412006,0.89082813,0.88614047,1.0017092,0.7536596,0.95272696,0.70430064,1.0548491,1.0577109,0.9593649,0.8386246,0.9884834,0.7022121,0.97595215,1.0902953,0.8044139,0.855698,0.87385595,1.0476458,1.0606804,0.7872536,1.0637527,0.9742378,1.0181465,0.8111844,0.8334365,1.0770891,0.91178405,0.8744974,1.0402248,1.1124699,0.9982058,0.8860251,1.0318301,0.8310071,0.8461541,1.0996234,0.9559934,0.910514,0.81081057,0.80787957
];
const WSAW_TABLE_2: [f32; 512] = [
    -0.9126778,-1.0808705,-0.841809,-0.9288407,-1.1722815,-1.0014539,-0.9333838,-0.7921252,-1.1677734,-1.1496983,-0.9116736,-0.9512874,-0.84839314,-0.9870161,-0.85008264,-1.094462,-0.83615243,-0.7600745,-0.74795866,-0.8417977,-0.9450003,-1.0549706,-0.86985284,-0.82258546,-0.8672323,-0.76361644,-0.75407237,-0.7396575,-0.97790736,-1.0462077,-0.75978005,-0.71374774,-0.8818611,-0.7367985,-0.6861605,-0.9664817,-0.66976315,-0.89746386,-0.8412488,-0.7530297,-0.71780455,-0.95151097,-0.7503789,-0.7432556,-0.81046593,-0.918421,-0.8641796,-0.7331772,-0.7102827,-0.6135658,-0.6231715,-0.7944904,-0.7990703,-0.70724595,-0.9855708,-0.9169222,-0.8930533,-0.69282246,-0.9260424,-0.8163821,-0.8897163,-0.7772176,-0.9367905,-0.88944006,-0.87960285,-0.71009886,-0.6253476,-0.7332134,-0.7845527,-0.6002018,-0.87493366,-0.66613245,-0.8189857,-0.67272294,-0.9006971,-0.74317586,-0.65544045,-0.6745725,-0.67041236,-0.7631141,-0.84205,-0.63580376,-0.64808226,-0.78822255,-0.5806555,-0.84333,-0.57317835,-0.568997,-0.7280936,-0.5790544,-0.66973925,-0.73808265,-0.8220367,-0.75047135,-0.48253298,-0.778956,-0.6699056,-0.7870192,-0.6138638,-0.5374003,-0.5282678,-0.69502234,-0.6870978,-0.63018066,-0.49074894,-0.42862922,-0.3914544,-0.42367584,-0.68961954,-0.63979274,-0.43072748,-0.43855393,-0.7434653,-0.45700252,-0.68326235,-0.46034724,-0.4668923,-0.619084,-0.7199047,-0.5563249,-0.40940714,-0.37343436,-0.5998315,-0.38987625,-0.39393508,-0.58082724,-0.38215256,-0.6676942,-0.65261763,-0.35292345,-0.42676812,-0.634366,-0.5555512,-0.5522718,-0.38163823,-0.465262,-0.40932155,-0.3710184,-0.368625,-0.5818403,-0.5556234,-0.36824232,-0.29523122,-0.46538913,-0.38105053,-0.4587946,-0.40913165,-0.5101556,-0.5465696,-0.36065197,-0.31989658,-0.43399954,-0.38684505,-0.23882067,-0.51707965,-0.2631346,-0.48983073,-0.4295858,-0.42959243,-0.21400362,-0.36786586,-0.25850976,-0.19681942,-0.17053932,-0.46813405,-0.38528466,-0.46276975,-0.215235,-0.4814093,-0.26670074,-0.5007827,-0.28282046,-0.28670126,-0.3429078,-0.22489929,-0.27398878,-0.329848,-0.25814945,-0.49634355,-0.26850462,-0.45974845,-0.23509389,-0.48466516,-0.15547425,-0.36381418,-0.17151713,-0.31833804,-0.13590407,-0.21210647,-0.19654071,-0.45447582,-0.39760506,-0.14312506,-0.21858853,-0.21293938,-0.27719754,-0.34951353,-0.23332232,-0.26701242,-0.027871847,-0.28106332,-0.21362412,-0.3724209,-0.26131237,-0.32033712,-0.17334491,-0.022687614,-0.14947838,-0.3320459,-0.21453899,-0.3629368,-0.051440895,-0.27213055,-0.36349374,-0.13690048,-0.16269702,-0.08977997,-0.27049363,-0.20473945,-0.03684765,-0.19843268,-0.05646676,-0.08994377,-0.07755536,0.008842111,-0.10324347,-0.10508251,-0.29749566,-0.062342882,-0.2642247,-0.19128889,-0.094563425,0.10162914,-0.24126536,-0.1923899,-0.15722334,-0.25961703,0.11901927,0.102514744,0.07950568,-0.07564211,0.047674537,0.0032955408,0.080993295,0.13967347,0.06441963,0.104011774,-0.16148144,-0.018505156,-0.037160516,-0.16966248,0.11068475,-0.11552805,0.14844298,0.13683534,-0.16812515,-0.17591155,0.04425907,-0.011578202,0.14842856,0.04345739,-0.04548067,0.040464282,-0.12214249,0.16093552,-0.042019904,0.12838161,0.20940602,0.019341946,0.1731689,-0.020288765,0.08192539,0.102900624,0.20624828,0.0038411617,0.1270616,0.18214071,-0.029190361,0.257398,0.07091606,0.21160495,0.07995486,0.14060521,0.30440795,0.17491996,0.17670059,0.0020514727,0.16044617,0.24124539,-0.0036190748,0.305089,0.16577506,0.25151026,0.056066632,0.0024071932,0.23495233,0.26014483,0.22032928,0.27769744,0.22321618,0.12741804,0.2523594,0.19703424,0.18611479,0.38613212,0.35595763,0.15827513,0.33018756,0.36694992,0.23736155,0.2380029,0.19528294,0.022116661,0.2787522,0.24040997,0.41733873,0.19467926,0.41273248,0.29288197,0.3719852,0.13696766,0.13347661,0.16933835,0.42584705,0.40071476,0.12849987,0.31311357,0.45758498,0.45783353,0.3888719,0.31398308,0.20202076,0.3351804,0.12968552,0.33017492,0.22225046,0.24770713,0.31945074,0.51918566,0.48011398,0.50483215,0.26523662,0.14590609,0.26981938,0.20628369,0.17818308,0.2728653,0.3609246,0.19553542,0.5489911,0.24279535,0.55921364,0.2871275,0.2363795,0.39015615,0.503544,0.26726007,0.41776514,0.21928418,0.20537543,0.40357387,0.24763393,0.3853345,0.54914653,0.44974875,0.48706424,0.27234304,0.3733679,0.29754567,0.55033875,0.5156481,0.3894217,0.5282062,0.40421402,0.47412157,0.28915286,0.6578679,0.33331573,0.5073656,0.46790087,0.41274214,0.57217896,0.33150697,0.45347023,0.469532,0.4046706,0.4186914,0.36388612,0.5632483,0.605113,0.6952363,0.6629964,0.6397203,0.38572335,0.62732446,0.6167846,0.6150905,0.5565139,0.5184071,0.6069683,0.5962336,0.5342965,0.43688905,0.6312146,0.6080694,0.4188763,0.67147267,0.6270257,0.66398156,0.45492685,0.56570745,0.5088172,0.48055565,0.43210042,0.6242372,0.6156119,0.62627673,0.75754416,0.82556,0.5165906,0.5991881,0.64035153,0.5790489,0.7493926,0.53611994,0.4644842,0.79329956,0.7068341,0.84847414,0.6258273,0.75995445,0.68716395,0.7336345,0.5067227,0.6745988,0.8507879,0.89907587,0.58890724,0.73198783,0.7829386,0.5390682,0.5794581,0.6274506,0.59930027,0.66396284,0.5807202,0.7639247,0.60099816,0.62272763,0.8569244,0.8231561,0.9025835,0.6982076,0.84449947,0.8333647,0.7306019,0.9259169,0.8995571,0.8519956,0.8696896,0.880821,0.8416661,0.734576,0.73736763,0.86812973,0.88134384,0.7938069,0.7837368,0.6488621,0.7748406,0.8275616,0.65826476,0.84720695,0.7692559,0.89939535,0.802997,0.9443798,0.8602731,0.82156765,0.74936867,0.8960469,0.7973689,0.92046297,1.0153308,1.0922511,1.095237,1.0011129,0.8212398,0.9184147,0.7562771,0.8978251,0.88129973,0.9228128,0.855855,0.7784444,0.77746606,0.91146135,0.89546525,0.8725672,0.9557446,0.91096914,1.0501909,1.0543835,0.9712542,0.8703666,0.89208853,0.9625639,1.0808089,0.92899203,1.166642,1.0507236,1.0956321
];
const SSAW_TABLE_1: [f32; 512] = [
    -0.98211926,-1.0138005,-0.9732973,-0.988363,-0.9916007,-0.99670374,-0.97771084,-0.96761364,-0.9705852,-0.9773548,-0.9615476,-0.9643683,-0.94735175,-0.93145376,-0.9275679,-0.9308111,-0.93783045,-0.9527276,-0.9100688,-0.94402885,-0.9328709,-0.9274664,-0.92148983,-0.90398383,-0.90167993,-0.89708585,-0.9041835,-0.8855049,-0.88494205,-0.90032434,-0.877059,-0.88064545,-0.86247814,-0.86805725,-0.871776,-0.8454771,-0.8734827,-0.84258604,-0.8617569,-0.85752654,-0.83143836,-0.83773434,-0.8180562,-0.81226176,-0.83371204,-0.8080247,-0.83724236,-0.8072779,-0.8264472,-0.82678545,-0.81768936,-0.81683487,-0.7921554,-0.78888893,-0.80706847,-0.76819295,-0.76661915,-0.7758847,-0.7574418,-0.7689102,-0.78240806,-0.7415718,-0.758114,-0.7356384,-0.7399374,-0.74092245,-0.7347708,-0.7535902,-0.73414224,-0.7279847,-0.74424887,-0.71781135,-0.72997206,-0.716758,-0.7069157,-0.6944188,-0.71136004,-0.7099309,-0.7140608,-0.6967149,-0.67481804,-0.6746105,-0.67591006,-0.6594004,-0.66452456,-0.6648179,-0.6521387,-0.6750683,-0.65423495,-0.66841626,-0.64994043,-0.6378779,-0.62919027,-0.618593,-0.6361667,-0.6187043,-0.6399158,-0.63323975,-0.6126395,-0.60859597,-0.59098077,-0.6105299,-0.6041479,-0.58990127,-0.59058464,-0.6064966,-0.58292854,-0.5962046,-0.5879077,-0.5832573,-0.56762505,-0.57193553,-0.5488063,-0.5445866,-0.5345076,-0.5488534,-0.5316855,-0.5508332,-0.55650616,-0.550569,-0.5374842,-0.511443,-0.53107613,-0.5155113,-0.5053655,-0.50617915,-0.5236429,-0.49674326,-0.4999289,-0.4902869,-0.5007856,-0.47547567,-0.486494,-0.46938694,-0.46637386,-0.4789552,-0.45012403,-0.45356566,-0.47772807,-0.45836484,-0.45049226,-0.4514141,-0.4578218,-0.42305118,-0.41840237,-0.42716432,-0.4328599,-0.41318125,-0.40160906,-0.41831595,-0.393708,-0.3900708,-0.41474324,-0.40520006,-0.40893787,-0.39639407,-0.38857788,-0.3954149,-0.39446104,-0.36659777,-0.36085254,-0.3503067,-0.37760037,-0.34416258,-0.37371212,-0.3702693,-0.3604114,-0.32664245,-0.34164846,-0.35539007,-0.33123225,-0.3382612,-0.34643817,-0.33322555,-0.32803583,-0.3279028,-0.2947132,-0.31478792,-0.2935627,-0.31212544,-0.31309724,-0.29120642,-0.2914647,-0.27641183,-0.27328306,-0.2771991,-0.27474785,-0.28623784,-0.2474131,-0.2635302,-0.25129038,-0.23629612,-0.26265478,-0.250215,-0.22138923,-0.24327266,-0.25192255,-0.21851063,-0.21611041,-0.22000122,-0.198389,-0.20715046,-0.1921255,-0.19758207,-0.20917702,-0.20355058,-0.21138853,-0.17341447,-0.20037782,-0.18735385,-0.19191962,-0.17847598,-0.18987209,-0.17755812,-0.17389703,-0.14400852,-0.15562254,-0.14782757,-0.136298,-0.15230858,-0.12565148,-0.1397478,-0.14042968,-0.12210113,-0.13492405,-0.13492948,-0.11363429,-0.11149174,-0.11315566,-0.08449519,-0.087302625,-0.08510488,-0.09477258,-0.09583211,-0.068582,-0.09503043,-0.09027445,-0.07013148,-0.07892656,-0.045188904,-0.07872546,-0.06797612,-0.038632333,-0.03203851,-0.039459825,-0.053051412,-0.022936821,-0.01949644,-0.04090172,-0.029256046,-0.020797431,-0.016347706,-0.017204702,-0.008787334,-0.014152169,-0.010291338,0.011258841,0.006320715,-0.00021868944,0.025040627,0.018305898,0.0029819012,0.015941858,0.009572029,0.015785217,0.054245472,0.025264382,0.026552796,0.061801195,0.04458952,0.056603074,0.07164395,0.06685078,0.08214283,0.060180068,0.07712805,0.08595276,0.10218811,0.07039487,0.10977185,0.10980594,0.08961487,0.11023784,0.12649584,0.104546905,0.114694476,0.10606718,0.13013268,0.12884939,0.12557864,0.119571805,0.13209903,0.14698756,0.12744308,0.15611076,0.15377343,0.16783893,0.17838979,0.17817605,0.16944182,0.18850195,0.16381824,0.18545663,0.17274427,0.1761471,0.1918819,0.21239686,0.20658112,0.19918525,0.21441972,0.19833148,0.22359395,0.20736647,0.21383727,0.22724116,0.21779144,0.23223197,0.24686694,0.23394501,0.24275434,0.26553833,0.23795033,0.2564931,0.25787556,0.2653762,0.2753377,0.28048265,0.2937876,0.28974736,0.2890874,0.307351,0.2758292,0.30909908,0.31744015,0.29090095,0.32930243,0.30803347,0.32736492,0.32121646,0.33178854,0.35041857,0.33841884,0.3319224,0.34564793,0.33948004,0.3309765,0.34438992,0.34687102,0.37205398,0.37729204,0.38902926,0.38621807,0.3718599,0.39600384,0.3794216,0.38085866,0.38702297,0.39481044,0.41535926,0.41203392,0.41103208,0.4055134,0.4223162,0.42367768,0.4227425,0.43593037,0.4205302,0.43741775,0.43797565,0.45129156,0.44678986,0.44490647,0.44439304,0.4629506,0.44415796,0.4516387,0.48128736,0.4894625,0.490955,0.47851658,0.49915755,0.48634768,0.47604787,0.50481737,0.4864564,0.52436113,0.5143635,0.52207005,0.528002,0.52586174,0.5302113,0.52832806,0.5354086,0.52525973,0.56067276,0.5297395,0.5353832,0.55995715,0.57144296,0.57274175,0.5804906,0.56707084,0.57081294,0.57628965,0.59642386,0.5849098,0.58449507,0.5960895,0.60545886,0.6160594,0.59293437,0.61240685,0.6059452,0.6124686,0.6066747,0.6073005,0.64425147,0.6464381,0.63462913,0.6477212,0.65371716,0.64066434,0.6682348,0.6505189,0.6554662,0.6560713,0.64897764,0.6676322,0.6759063,0.6801218,0.6716274,0.6719235,0.67445445,0.6958164,0.6831641,0.69996727,0.71041274,0.7052549,0.7228086,0.72021353,0.73631966,0.71839094,0.7382231,0.7144091,0.73969436,0.737713,0.74063134,0.76065505,0.75730014,0.75612164,0.7602887,0.76945937,0.77645195,0.77535415,0.7816684,0.79757655,0.7827569,0.7992749,0.7819736,0.7909906,0.78664494,0.7973149,0.7915951,0.81050575,0.8116822,0.8303423,0.8327496,0.8092841,0.8133359,0.85224843,0.84557104,0.8573861,0.8667952,0.84589815,0.86335516,0.8521602,0.86073434,0.8705796,0.8795941,0.86180687,0.86249435,0.90233624,0.8725182,0.90687454,0.8746009,0.89036286,0.91359305,0.89406526,0.90074503,0.9064981,0.9249171,0.90870047,0.9266658,0.91500354,0.9249339,0.9288548,0.95094013,0.95149815,0.9387392,0.9706092,0.959939,0.9615325,0.9801307,0.9658884,0.97066724,0.9631405,0.9878348,0.99244654,0.996439,1.0009303,0.99720883,0.9870919
];
const SSAW_TABLE_2: [f32; 512] = [
    -0.99800587,-0.9894651,-1.002681,-0.9979081,-0.9964382,-0.9658193,-0.9712451,-0.96127725,-0.98843825,-0.95076954,-0.9573952,-0.9677842,-0.95843416,-0.96180093,-0.9474089,-0.93659306,-0.917655,-0.94043696,-0.93717635,-0.94117457,-0.9300022,-0.9021689,-0.90329546,-0.9172033,-0.9048661,-0.9001982,-0.88843954,-0.91163003,-0.88312984,-0.8748778,-0.8963722,-0.8627014,-0.8677812,-0.88976103,-0.85200906,-0.8593621,-0.86049455,-0.8497967,-0.8476847,-0.8519773,-0.84240043,-0.82236326,-0.8193029,-0.8375634,-0.84140295,-0.8415469,-0.83520025,-0.80842024,-0.8170299,-0.8004987,-0.81934905,-0.7893849,-0.81575173,-0.7980844,-0.7738998,-0.80198854,-0.79857624,-0.7701143,-0.770665,-0.76928085,-0.7659395,-0.7670696,-0.7431758,-0.73697305,-0.75002515,-0.7351277,-0.75291663,-0.73770285,-0.7501312,-0.7105571,-0.7337938,-0.7088456,-0.70534766,-0.71276236,-0.7154391,-0.6983713,-0.69662154,-0.6960268,-0.69270337,-0.6915039,-0.69526696,-0.66957486,-0.6806611,-0.6808608,-0.6532549,-0.66624534,-0.67472804,-0.67591786,-0.66804826,-0.65239227,-0.6428242,-0.6582089,-0.6269197,-0.63892996,-0.6210729,-0.6142037,-0.6358628,-0.60441124,-0.62833893,-0.62148905,-0.6281555,-0.5953141,-0.58568823,-0.61266816,-0.5832951,-0.5975175,-0.5737579,-0.5632767,-0.57271427,-0.59121066,-0.58673286,-0.547503,-0.575432,-0.55653846,-0.5565245,-0.5487746,-0.5355512,-0.55583036,-0.55754936,-0.54887366,-0.51090205,-0.5164211,-0.53917193,-0.5278802,-0.50153077,-0.4919545,-0.49451184,-0.5163328,-0.49752092,-0.50427234,-0.510489,-0.48252267,-0.4831941,-0.46721673,-0.4866004,-0.46096075,-0.4836663,-0.4637305,-0.47557712,-0.45102936,-0.4570667,-0.45472145,-0.45039117,-0.43481153,-0.4210332,-0.4472465,-0.4460709,-0.43237293,-0.4032846,-0.4012373,-0.4069481,-0.4207903,-0.40698278,-0.39986902,-0.39975584,-0.38430423,-0.40643978,-0.37805563,-0.39637053,-0.3761729,-0.39009494,-0.38985878,-0.3784979,-0.34923458,-0.36539334,-0.35670072,-0.3443312,-0.36336577,-0.33841497,-0.33140928,-0.3545261,-0.32752305,-0.30843258,-0.33611816,-0.31384325,-0.3200736,-0.29558444,-0.29134196,-0.2992478,-0.29239464,-0.287753,-0.29209083,-0.30212343,-0.28848362,-0.27383357,-0.2693473,-0.25259036,-0.2614501,-0.24822515,-0.26331192,-0.2435252,-0.23599607,-0.24206144,-0.2617647,-0.24400026,-0.22948575,-0.23905683,-0.23852468,-0.23498487,-0.204404,-0.20455325,-0.19469869,-0.19252837,-0.20293933,-0.21002632,-0.19455373,-0.18600982,-0.18734258,-0.17766988,-0.19443536,-0.18576992,-0.19206291,-0.15659088,-0.15981382,-0.14529961,-0.16913855,-0.15182453,-0.1321953,-0.14199084,-0.13575399,-0.12299377,-0.1279968,-0.13641238,-0.11796081,-0.104552686,-0.11149186,-0.100580335,-0.111528635,-0.1065681,-0.11937946,-0.08499956,-0.0987789,-0.0772832,-0.08425379,-0.09049946,-0.063390434,-0.095718265,-0.06660932,-0.07434219,-0.07468647,-0.040844202,-0.050530612,-0.061532974,-0.04776728,-0.05867231,-0.05906093,-0.035485685,-0.04717648,-0.030231655,-0.016848087,-0.026024997,-0.008141458,-0.0006557703,-0.0016700029,-0.022354722,-0.011480212,-0.016799688,-0.0019717813,0.024536014,0.0074449778,0.025856495,0.038073182,0.017510056,0.011279464,0.035241365,0.045441866,0.025709271,0.054174423,0.056684136,0.047376037,0.04549074,0.060315847,0.0688889,0.0723629,0.062116265,0.06477225,0.0706563,0.09071016,0.07811558,0.09026933,0.075957894,0.116318226,0.09315181,0.09908235,0.12528372,0.100681424,0.10684776,0.11307359,0.1289742,0.12742925,0.1268754,0.14060795,0.14813077,0.15926135,0.13436246,0.15047419,0.16579747,0.15411723,0.16199541,0.1507914,0.16762042,0.16407776,0.17909038,0.17589056,0.19146776,0.17669499,0.20216191,0.18964708,0.21157682,0.20205462,0.20476389,0.22721195,0.22674131,0.2361182,0.24206746,0.22988188,0.22076857,0.24076927,0.22651112,0.24526131,0.23577356,0.25239372,0.26670313,0.2621746,0.2670523,0.29149783,0.26095235,0.28524542,0.30154133,0.27900946,0.29091752,0.297094,0.31461525,0.31216156,0.31224048,0.291484,0.31469655,0.32587814,0.32578897,0.31076658,0.3163495,0.35050046,0.32485485,0.32488275,0.3417704,0.34646022,0.37051165,0.3423835,0.37918854,0.3672123,0.3557111,0.3548944,0.3701663,0.36385655,0.40001178,0.39423418,0.38272488,0.39986455,0.39853978,0.40488935,0.4273951,0.43147552,0.40929174,0.40978253,0.413252,0.41247606,0.4483385,0.42078853,0.43818986,0.45344257,0.43245745,0.46441555,0.44006753,0.4542657,0.4577465,0.45881915,0.49049687,0.47238076,0.48238254,0.46846843,0.4793253,0.49941385,0.49798226,0.4795537,0.50038075,0.51575065,0.5295696,0.52099454,0.514729,0.51515687,0.51085067,0.5387603,0.5383924,0.52097106,0.52715707,0.5512607,0.5613531,0.5721623,0.55992675,0.55219686,0.55315304,0.54983664,0.5772494,0.56700766,0.5642717,0.5783963,0.5881715,0.6019368,0.5971669,0.5845188,0.6123738,0.60382247,0.6233721,0.60313666,0.63334155,0.63198256,0.6321813,0.6461334,0.6183355,0.6553428,0.65430367,0.6456921,0.66063976,0.6398337,0.67559147,0.67290354,0.6788374,0.6820122,0.67412126,0.6929146,0.66573465,0.6935015,0.70651305,0.6998993,0.69240427,0.7086253,0.71658933,0.7262634,0.71240246,0.71577466,0.7052916,0.7441541,0.7258686,0.7257631,0.7374091,0.7489352,0.7575468,0.7592735,0.77044034,0.74262404,0.7734904,0.7756312,0.78534496,0.7649739,0.79495955,0.79905105,0.79442966,0.7692342,0.8080207,0.7819644,0.79361534,0.8028282,0.8046433,0.828622,0.8065809,0.8043692,0.83231115,0.82541966,0.8383492,0.83228064,0.8299689,0.8557116,0.8635526,0.8661388,0.86849725,0.86506546,0.8434477,0.8629247,0.8775352,0.8560138,0.8685261,0.89559746,0.9033321,0.90759504,0.9103615,0.90709007,0.91516197,0.91038895,0.8948773,0.9211763,0.91900074,0.91022515,0.9268677,0.9300729,0.94452345,0.9186888,0.95210123,0.94882214,0.9471412,0.96192956,0.94803655,0.9624481,0.97939634,0.969537,0.9738914,0.98559356,0.9800731,0.9772172,1.0015793,0.9807726,0.99403536,1.0134752
];
const ASAW_TABLE_1: [f32; 512] =[
    0.091745675,-0.1101363,-0.53006506,-0.69346344,-0.5407917,-0.798598,-0.8624409,-0.8937901,-0.86072826,-0.894121,-0.87121093,-0.82162297,-0.86308753,-0.90627795,-0.91845524,-0.9146887,-0.91458625,-0.91799366,-0.9163509,-0.9123397,-0.9094468,-0.8998493,-0.9079085,-0.9155027,-0.9002601,-0.89542025,-0.89320916,-0.9020785,-0.8878311,-0.8911766,-0.87735075,-0.8937182,-0.8690234,-0.85360616,-0.8786671,-0.87819916,-0.86031777,-0.8589583,-0.8637548,-0.8406059,-0.8520505,-0.8306897,-0.8513898,-0.8492266,-0.8138401,-0.83309966,-0.80398244,-0.8064928,-0.81123334,-0.8053312,-0.79403776,-0.7993429,-0.7951368,-0.7987182,-0.7761973,-0.79391474,-0.7935857,-0.7843366,-0.76768535,-0.77769136,-0.76691854,-0.74966604,-0.7751944,-0.7387329,-0.7345086,-0.7502902,-0.7264619,-0.7503164,-0.74897313,-0.7298279,-0.7289021,-0.71452695,-0.70684505,-0.7059956,-0.71030414,-0.6995122,-0.7166209,-0.688473,-0.68039095,-0.70404303,-0.67702055,-0.667446,-0.6866686,-0.68377924,-0.66552615,-0.660059,-0.6659951,-0.6535793,-0.6489693,-0.6666833,-0.6527194,-0.6317054,-0.62242264,-0.6470007,-0.6162919,-0.6157533,-0.64016104,-0.6181505,-0.6335832,-0.6232609,-0.6071291,-0.5903652,-0.6143787,-0.59057564,-0.60906744,-0.5772217,-0.5831045,-0.5897921,-0.58073723,-0.5807675,-0.5571312,-0.57325417,-0.5615628,-0.54331875,-0.5644957,-0.55414045,-0.53184915,-0.5545278,-0.5309963,-0.51953685,-0.5156291,-0.5339525,-0.53378755,-0.5229045,-0.5222945,-0.5095603,-0.5051126,-0.5113881,-0.4846843,-0.49688643,-0.49739122,-0.4955482,-0.47859102,-0.47129637,-0.48442072,-0.48212105,-0.4762333,-0.45789778,-0.45672,-0.45443404,-0.43853045,-0.45562547,-0.45014787,-0.42838335,-0.4287467,-0.42870748,-0.44395298,-0.4359386,-0.42853957,-0.42722464,-0.418491,-0.41416413,-0.40678662,-0.4140374,-0.41045046,-0.40601134,-0.4044115,-0.39154875,-0.3650704,-0.3607906,-0.35985512,-0.3633657,-0.34995395,-0.36613733,-0.34259766,-0.3511715,-0.36367935,-0.36032552,-0.33523512,-0.33608317,-0.33897817,-0.3453101,-0.3334887,-0.3397963,-0.30099428,-0.33253664,-0.3204124,-0.29057527,-0.2984026,-0.3121131,-0.2926312,-0.2930109,-0.2877689,-0.26590133,-0.29586935,-0.27337116,-0.2623061,-0.27665538,-0.25226724,-0.24349749,-0.2693516,-0.24976331,-0.23211098,-0.25324076,-0.25351483,-0.2220689,-0.22880805,-0.24359941,-0.22844774,-0.23825961,-0.21259832,-0.22996634,-0.19697553,-0.18864822,-0.21691167,-0.21017748,-0.21152079,-0.1913839,-0.19475025,-0.1936962,-0.18703133,-0.15683931,-0.16659927,-0.17295575,-0.16505611,-0.17349905,-0.13820952,-0.16670686,-0.16279233,-0.149091,-0.124638915,-0.15187371,-0.11603665,-0.11386186,-0.105459094,-0.124264956,-0.12970495,-0.10867232,-0.11459535,-0.09877342,-0.117432356,-0.11052197,-0.10422146,-0.10327119,-0.08529645,-0.071962655,-0.08843571,-0.077124,-0.065599024,-0.047921896,-0.05595255,-0.05213505,-0.06825423,-0.04422176,-0.053119123,-0.032246053,-0.053444684,-0.030504525,-0.029660642,-0.029950738,-0.037541628,-0.030076325,-0.0018665195,0.0014792681,0.0036278963,0.011977673,-0.015754282,0.005684972,0.012038231,0.0040922165,0.029286504,0.023647547,0.033446908,0.03211105,0.03171003,0.027026772,0.030095696,0.031046629,0.063405514,0.0567106,0.073896885,0.06790042,0.0576638,0.08107388,0.08497691,0.07865298,0.08791053,0.073299766,0.07607663,0.08774221,0.09995139,0.10240877,0.12138462,0.124034286,0.1145519,0.12873971,0.1329391,0.13953972,0.11933768,0.122944236,0.11738324,0.12360811,0.14327943,0.13283706,0.14993787,0.16106784,0.15293789,0.18024445,0.15414178,0.15597975,0.16420805,0.19340599,0.17185807,0.18214011,0.1774416,0.18004405,0.18434966,0.18375826,0.18807995,0.19725049,0.20077598,0.21900356,0.2131623,0.22308862,0.23484981,0.2232306,0.23072302,0.23765135,0.24097133,0.2660185,0.24497104,0.27252877,0.2703321,0.2534337,0.2677709,0.26049912,0.27023578,0.28267968,0.27336884,0.3002826,0.2891848,0.30332744,0.3051505,0.3008814,0.31170583,0.3255018,0.3194052,0.3294525,0.32403994,0.31740952,0.3357762,0.34051085,0.34913814,0.347659,0.3626814,0.36556578,0.3667301,0.34811246,0.3678404,0.36750066,0.3858701,0.38511038,0.36581457,0.36496937,0.37719774,0.40160072,0.39479554,0.41165173,0.3999207,0.3991742,0.41594267,0.4151206,0.42614162,0.43714094,0.4361211,0.41275382,0.43293083,0.4245057,0.44307995,0.45446622,0.44890642,0.43597484,0.44107878,0.4747008,0.4768238,0.46604216,0.47777486,0.47682822,0.49645376,0.48359692,0.47385788,0.47946143,0.4975947,0.49657345,0.50742984,0.5089549,0.5050994,0.52639127,0.5046812,0.5390173,0.5101336,0.5317341,0.518626,0.5210458,0.54973197,0.5291014,0.5534675,0.5544026,0.562482,0.5493125,0.56468165,0.5599408,0.5607146,0.58156884,0.57760763,0.58273864,0.5875058,0.6107782,0.60446346,0.5901574,0.60200214,0.6011909,0.6086955,0.61133754,0.6182051,0.6312524,0.62946606,0.62090707,0.62059486,0.6413144,0.64249563,0.635743,0.6431676,0.6439117,0.65868294,0.6466582,0.6720896,0.67619634,0.6815028,0.66458046,0.6985955,0.6971632,0.6751958,0.70565426,0.7157967,0.7089404,0.7052953,0.7191899,0.7052599,0.71225107,0.72535396,0.7191309,0.74564266,0.727512,0.7465522,0.7564015,0.73473895,0.7396183,0.7500649,0.76478827,0.7436129,0.7647457,0.78493726,0.7825833,0.7848458,0.79123604,0.80100584,0.7747931,0.8035986,0.7928195,0.81593794,0.79541445,0.7927246,0.8085418,0.80177397,0.8125549,0.82215697,0.83888984,0.82186633,0.8238629,0.85415334,0.84930986,0.8434374,0.8629764,0.85885614,0.84572065,0.8762194,0.8506297,0.8692078,0.869285,0.8925504,0.86492395,0.8997222,0.8961538,0.9063226,0.8841714,0.9029187,0.8881803,0.89440525,0.91630614,0.912181,0.91724944,0.9181243,0.91115534,0.91811144,0.9112615,0.91204333,0.8945149,0.916029,0.8326288,0.91133523,0.8985841,0.85821706,0.7112016,0.7641685,0.69637686,0.77891594,0.07893831,0.26188964,0.19251156,0.64993894,-0.26167476
];
const ASAW_TABLE_2: [f32; 512] =[
    0.08114104,-0.121698745,-0.5149073,-0.67696726,-0.5481332,-0.7886516,-0.85394496,-0.88769233,-0.85740554,-0.89089525,-0.871447,-0.8323063,-0.868711,-0.906449,-0.91835046,-0.9148994,-0.9155231,-0.9181057,-0.9170662,-0.91290903,-0.9101137,-0.90141034,-0.9081211,-0.9147427,-0.9006416,-0.8959702,-0.89361274,-0.901132,-0.8880248,-0.89059114,-0.87787974,-0.8920511,-0.86963016,-0.8555047,-0.8773544,-0.87651265,-0.86017203,-0.85853153,-0.8623656,-0.8413519,-0.8510916,-0.8316697,-0.8496377,-0.8472804,-0.8153891,-0.83207417,-0.8057574,-0.80755407,-0.81133294,-0.80565184,-0.7951785,-0.7994592,-0.7952857,-0.7980342,-0.77758086,-0.79289484,-0.79216754,-0.7835112,-0.7682752,-0.7767346,-0.7667238,-0.75095344,-0.77321047,-0.74036527,-0.7361755,-0.74976873,-0.7281531,-0.7489223,-0.74729335,-0.7298405,-0.7285827,-0.71536994,-0.70810664,-0.70691675,-0.7103117,-0.7002839,-0.71505684,-0.6896016,-0.68198264,-0.70257187,-0.678117,-0.66917145,-0.6858232,-0.6828201,-0.6661602,-0.66086566,-0.66570735,-0.6542362,-0.6497035,-0.6650144,-0.6521672,-0.6330532,-0.624367,-0.64577925,-0.6180477,-0.61713403,-0.63839495,-0.6183951,-0.6316782,-0.6220679,-0.6072937,-0.5919575,-0.6128681,-0.59127486,-0.6072772,-0.57853496,-0.5833292,-0.5888389,-0.5803552,-0.57994735,-0.5585023,-0.572399,-0.5615718,-0.54491997,-0.563309,-0.5536696,-0.53342015,-0.5531441,-0.53179234,-0.52117133,-0.5172628,-0.5331154,-0.53253394,-0.5224252,-0.5214482,-0.5096939,-0.5053055,-0.51044893,-0.48627728,-0.49668878,-0.4967026,-0.4946295,-0.47912157,-0.47220254,-0.48343372,-0.4809547,-0.4752863,-0.4585532,-0.45707136,-0.4546045,-0.44003314,-0.4547938,-0.44948995,-0.4297089,-0.42959696,-0.42912722,-0.44224393,-0.4346851,-0.42767334,-0.42606962,-0.41787153,-0.41359055,-0.4065979,-0.41260815,-0.4089849,-0.40460414,-0.40274715,-0.39087874,-0.36690754,-0.3626684,-0.36140198,-0.36408764,-0.35173118,-0.36568153,-0.3443225,-0.3515088,-0.36219203,-0.35877597,-0.33603853,-0.33635747,-0.3384959,-0.34368944,-0.33274668,-0.33791852,-0.30299294,-0.33059573,-0.3193838,-0.292427,-0.29894978,-0.31070197,-0.29294986,-0.29285246,-0.28775805,-0.26788533,-0.29408866,-0.27365547,-0.26338494,-0.27570498,-0.25359178,-0.24536157,-0.2679081,-0.2500614,-0.2339356,-0.25228274,-0.25209147,-0.22370464,-0.22926015,-0.24197316,-0.22807008,-0.23635685,-0.213112,-0.22811532,-0.19835526,-0.19051832,-0.21520656,-0.20878577,-0.2095449,-0.19121057,-0.19376802,-0.19239616,-0.186037,-0.15876472,-0.16700542,-0.17222077,-0.16476399,-0.17183387,-0.14003056,-0.16492665,-0.16101217,-0.14839834,-0.12622827,-0.15000212,-0.11771208,-0.11534405,-0.107440054,-0.12372154,-0.12812215,-0.10899162,-0.113821685,-0.099322796,-0.11547369,-0.108896196,-0.10286087,-0.101581335,-0.08516896,-0.07288182,-0.0870896,-0.076599896,-0.06592059,-0.04977274,-0.056476235,-0.052648008,-0.066541255,-0.044744194,-0.05221808,-0.03322941,-0.05163771,-0.030811608,-0.029626608,-0.029449582,-0.03576213,-0.02869147,-0.003181219,0.00022768974,0.0025724173,0.010429382,-0.0137863755,0.005705595,0.011787891,0.0051596165,0.027989388,0.02341187,0.03255737,0.03180468,0.03188312,0.028155208,0.03131795,0.032598138,0.061796427,0.056280255,0.0719918,0.06709659,0.05843222,0.07967603,0.083580256,0.07839382,0.08705771,0.07450521,0.07740843,0.08821261,0.09950018,0.10211933,0.1194216,0.122211814,0.114218,0.12726426,0.13143182,0.13773394,0.12021148,0.123852134,0.11934388,0.12531197,0.14323246,0.13438523,0.15002084,0.16034913,0.1535573,0.17826462,0.1554972,0.15756583,0.1653148,0.19170332,0.17298448,0.18255901,0.17881739,0.18156564,0.18582761,0.1857369,0.19001317,0.1985997,0.20216835,0.21880555,0.21404815,0.22330642,0.23419571,0.22430241,0.23139715,0.23799062,0.24137652,0.26407564,0.24580169,0.27073228,0.2692145,0.25462866,0.2678076,0.2617787,0.27086842,0.2823646,0.27452314,0.2988813,0.28945148,0.30245757,0.3045131,0.30115306,0.31120968,0.32390773,0.31892335,0.32828915,0.32391286,0.31845403,0.33521485,0.3398583,0.3479619,0.3470819,0.36087,0.36386895,0.36533868,0.34922457,0.36719537,0.3673283,0.3840915,0.38385117,0.3671341,0.3668177,0.37812233,0.40024865,0.3946346,0.41005266,0.40006006,0.3998313,0.4151715,0.41487563,0.425107,0.43531907,0.43484735,0.41451132,0.43288124,0.42582715,0.4427725,0.4533286,0.4488213,0.43776155,0.44273317,0.4730543,0.47537637,0.46622753,0.47709143,0.4766848,0.49456477,0.48357117,0.4753492,0.4807651,0.4973184,0.49684548,0.5069305,0.508721,0.5057287,0.52508974,0.5062268,0.53718257,0.5119431,0.5315784,0.52036166,0.52294743,0.54888105,0.5309776,0.5530714,0.5543375,0.561954,0.55068266,0.5647789,0.56099975,0.56212246,0.5810945,0.5780082,0.583004,0.5876764,0.6087979,0.6036196,0.59133804,0.6023015,0.6020154,0.60912097,0.61190426,0.6184436,0.6304761,0.62932324,0.62215006,0.6223074,0.64115953,0.6426445,0.6370771,0.64411163,0.6452079,0.6587728,0.6485189,0.67155945,0.67564476,0.6807966,0.66618943,0.69685984,0.6960217,0.67692983,0.7044389,0.71388936,0.70822966,0.70542455,0.7182101,0.7062627,0.71291196,0.72499394,0.71989715,0.74389803,0.72821677,0.7455764,0.75476605,0.73594534,0.74071753,0.7504383,0.7639605,0.7455728,0.76479244,0.7831754,0.7815178,0.7839638,0.79007894,0.7991981,0.7763327,0.8023724,0.7932259,0.81421065,0.7964021,0.794446,0.80894053,0.80335945,0.8133772,0.82234704,0.8376557,0.82295805,0.8251673,0.8525285,0.8486551,0.8438687,0.861673,0.8584407,0.847199,0.87474835,0.8524276,0.86936533,0.8698626,0.89100397,0.8668488,0.89824516,0.89543545,0.90497434,0.88560903,0.90263015,0.8899771,0.89586467,0.91574705,0.91221267,0.917966,0.9180136,0.91338676,0.9181785,0.9125211,0.912663,0.89751554,0.915448,0.84420925,0.9097813,0.8964675,0.8576096,0.72786444,0.7671011,0.70188314,0.7701015,0.162387,0.29369396,0.214985,0.6178461,-0.22946495
];
const ASAW_TABLE_3: [f32; 512] =[
    0.10964689,-0.10462117,-0.5677505,-0.7311831,-0.5562331,-0.82617337,-0.8833282,-0.90843403,-0.8778288,-0.90684,-0.8841547,-0.8280373,-0.8715772,-0.91425,-0.92204523,-0.9205256,-0.91526777,-0.922403,-0.9211721,-0.9132129,-0.90991694,-0.8988137,-0.90875775,-0.9184416,-0.9004916,-0.89530915,-0.89319,-0.90377456,-0.887913,-0.8921205,-0.8769587,-0.8958241,-0.868496,-0.8517331,-0.8801451,-0.88004786,-0.86051106,-0.8594293,-0.86520725,-0.83987176,-0.85303795,-0.82971555,-0.85317045,-0.85119754,-0.81229275,-0.8341332,-0.8022083,-0.80543274,-0.81113535,-0.8050116,-0.7928975,-0.7992272,-0.7949884,-0.7994027,-0.77481383,-0.79493517,-0.7950044,-0.78516227,-0.76709557,-0.77864826,-0.76711327,-0.74837875,-0.77717847,-0.7371005,-0.7328417,-0.75081176,-0.72477067,-0.7517106,-0.7506529,-0.72981524,-0.7292215,-0.71368396,-0.7055834,-0.7050745,-0.71029663,-0.6987404,-0.71818507,-0.68734443,-0.6787993,-0.70551425,-0.67592406,-0.66572064,-0.6875139,-0.6847384,-0.6648921,-0.65925235,-0.6662829,-0.6529224,-0.6482351,-0.6683521,-0.6532716,-0.6303576,-0.6204783,-0.6482221,-0.61453617,-0.6143725,-0.6419271,-0.6179058,-0.6354882,-0.62445384,-0.60696447,-0.5887728,-0.6158893,-0.5898764,-0.6108577,-0.5759084,-0.5828797,-0.5907453,-0.5811192,-0.5815878,-0.55576,-0.5741093,-0.5615538,-0.5417175,-0.5656823,-0.5546114,-0.5302781,-0.55591154,-0.5302003,-0.5179025,-0.5139954,-0.53478956,-0.5350412,-0.52338374,-0.5231409,-0.5094266,-0.50491965,-0.5123273,-0.48309124,-0.49708408,-0.49807984,-0.49646688,-0.47806042,-0.47039014,-0.48540765,-0.48328733,-0.4771803,-0.45724237,-0.45636863,-0.4542635,-0.43702775,-0.45645708,-0.45080572,-0.42705786,-0.42789638,-0.42828768,-0.44566208,-0.43719202,-0.42940575,-0.4283796,-0.41911042,-0.4147377,-0.4069754,-0.41546667,-0.41191608,-0.40741855,-0.40607584,-0.39221877,-0.36323327,-0.35891277,-0.35830826,-0.36264378,-0.34817672,-0.36659306,-0.34087282,-0.35083413,-0.36516666,-0.36187506,-0.3344317,-0.33580887,-0.33946043,-0.34693074,-0.33423078,-0.3416741,-0.2989956,-0.33447754,-0.32144105,-0.2887236,-0.2978555,-0.31352425,-0.29231256,-0.29316932,-0.28777975,-0.2639174,-0.29764998,-0.2730869,-0.26122725,-0.27760577,-0.2509427,-0.24163342,-0.2707951,-0.24946523,-0.23028642,-0.25419885,-0.2549382,-0.22043312,-0.228356,-0.24522573,-0.22882539,-0.24016231,-0.21208471,-0.23181736,-0.19559574,-0.18677807,-0.21861678,-0.21156925,-0.21349669,-0.19155729,-0.19573253,-0.19499618,-0.18802571,-0.15491384,-0.16619319,-0.1736908,-0.16534829,-0.17516422,-0.13638854,-0.16848707,-0.16457248,-0.14978361,-0.12304956,-0.15374535,-0.11436123,-0.11237967,-0.10347813,-0.12480843,-0.1312877,-0.10835302,-0.11536908,-0.098223984,-0.119391024,-0.11214769,-0.105582,-0.10496098,-0.085424006,-0.07104355,-0.08978176,-0.0776481,-0.06527746,-0.046071053,-0.055428922,-0.051622152,-0.06996721,-0.043699324,-0.054020166,-0.031262755,-0.055251658,-0.030197442,-0.029694676,-0.030451894,-0.039321065,-0.03146118,-0.0005518198,0.0027308464,0.004683256,0.013526082,-0.017722249,0.0056643486,0.01228869,0.0030248165,0.0305835,0.023883224,0.034336567,0.032417297,0.031536818,0.025898457,0.028873444,0.02949524,0.0650146,0.057140946,0.07580185,0.06870437,0.056895375,0.08247173,0.08637357,0.07891214,0.088763356,0.07209432,0.07474482,0.08727169,0.10040259,0.10269809,0.12334752,0.12585676,0.114885926,0.13021529,0.13444638,0.1413455,0.11846399,0.12203634,0.11542261,0.121904135,0.14332628,0.13128877,0.1498549,0.16178668,0.15231848,0.18222415,0.15278637,0.15439379,0.16310143,0.19510865,0.17073166,0.18172133,0.1760658,0.17852259,0.1828717,0.18177974,0.18614662,0.19590116,0.19938362,0.21920168,0.21227646,0.22287083,0.23550391,0.22215879,0.23004878,0.2373122,0.24056602,0.2679615,0.2441405,0.27432525,0.27144969,0.25223887,0.26773417,0.2592194,0.26960313,0.28299487,0.27221453,0.30168378,0.28891802,0.3041972,0.30578804,0.3006097,0.31220186,0.327096,0.31988704,0.33061588,0.324167,0.316365,0.33633757,0.3411634,0.35031438,0.34823596,0.36449265,0.36726272,0.3681214,0.34700036,0.36848533,0.36767304,0.3876487,0.3863697,0.36449492,0.3631209,0.37627327,0.40295267,0.3949566,0.4132508,0.39978147,0.39851713,0.41671383,0.41536558,0.42717624,0.43896294,0.43739486,0.41099632,0.4329803,0.42318416,0.4433874,0.45560396,0.44899154,0.43418813,0.43942428,0.4763472,0.47827125,0.4658568,0.4784583,0.4769715,0.49834287,0.48362255,0.47236657,0.47815788,0.49787104,0.49630153,0.5079292,0.5091889,0.5044701,0.5276929,0.5031357,0.54085195,0.50832415,0.5318899,0.5168904,0.5191442,0.55058277,0.527225,0.55386364,0.5544678,0.56301,0.5479423,0.56458426,0.55888176,0.55930674,0.5820432,0.57720697,0.5824733,0.5873352,0.61275864,0.60530734,0.58897686,0.6017027,0.6003666,0.60827005,0.6107708,0.61796653,0.6320286,0.629609,0.6196641,0.6188823,0.6414691,0.64234686,0.63440895,0.6422237,0.64261556,0.6585932,0.64479744,0.6726196,0.6767478,0.682209,0.6629716,0.7003312,0.6983049,0.6734617,0.7068696,0.7177042,0.7096511,0.7051661,0.72016954,0.704257,0.71159005,0.7257141,0.7183646,0.7473873,0.72680724,0.7475281,0.75803685,0.73353255,0.7385192,0.7496917,0.765616,0.74165297,0.76469904,0.7866995,0.78364897,0.7857281,0.7923936,0.80281436,0.7732536,0.8048258,0.79241353,0.8176679,0.79442704,0.79100347,0.80814445,0.8001891,0.8117342,0.8219704,0.8401359,0.8207778,0.82256216,0.85581213,0.84998834,0.8430209,0.86433953,0.85931545,0.844258,0.8778325,0.8488529,0.8691335,0.86878836,0.89450264,0.86305267,0.90184796,0.89737153,0.90869147,0.88292885,0.90397745,0.88662493,0.89332044,0.9192449,0.9136599,0.9216032,0.9213781,0.91604626,0.9210426,0.91716915,0.91832757,0.9018825,0.9218143,0.83717096,0.9192906,0.9097424,0.8732364,0.71584105,0.78176,0.71334654,0.8066875,-0.013905545,0.24182945,0.17958604,0.7017777,-0.3171834
];
const RSAW_TABLE: [f32; 512] =[
    -0.0,-0.11055553,-0.20838311,-0.29485708,-0.3712045,-0.43852726,-0.4978109,-0.5499342,-0.5956851,-0.63576674,-0.67080724,-0.70136744,-0.7279466,-0.75099134,-0.77089924,-0.78802425,-0.80268216,-0.81515366,-0.8256885,-0.834509,-0.8418123,-0.847774,-0.85254985,-0.856278,-0.85908115,-0.8610679,-0.86233455,-0.8629664,-0.863039,-0.86261916,-0.8617658,-0.86053133,-0.85896164,-0.8570975,-0.85497487,-0.8526253,-0.8500768,-0.8473539,-0.8444781,-0.84146863,-0.83834213,-0.83511335,-0.8317951,-0.82839876,-0.8249343,-0.8214104,-0.81783473,-0.8142139,-0.81055385,-0.8068596,-0.8031357,-0.7993859,-0.79561377,-0.79182225,-0.78801376,-0.7841907,-0.7803551,-0.77650857,-0.7726526,-0.7687884,-0.7649172,-0.7610399,-0.7571574,-0.7532704,-0.7493795,-0.7454853,-0.74158823,-0.7376886,-0.73378694,-0.7298835,-0.72597843,-0.7220721,-0.7181646,-0.7142562,-0.71034694,-0.70643693,-0.7025264,-0.69861525,-0.69470376,-0.6907919,-0.6868797,-0.6829672,-0.67905456,-0.67514163,-0.6712286,-0.66731536,-0.6634021,-0.6594887,-0.6555752,-0.6516617,-0.6477481,-0.6438344,-0.6399207,-0.636007,-0.63209325,-0.6281795,-0.62426573,-0.6203519,-0.6164381,-0.6125242,-0.60861033,-0.60469645,-0.60078263,-0.59686875,-0.5929549,-0.58904105,-0.5851272,-0.58121324,-0.57729936,-0.5733854,-0.56947154,-0.56555766,-0.5616438,-0.55772996,-0.5538161,-0.54990214,-0.54598826,-0.5420743,-0.53816044,-0.53424656,-0.5303327,-0.5264188,-0.5225049,-0.518591,-0.5146771,-0.51076317,-0.5068493,-0.5029354,-0.49902153,-0.49510765,-0.4911937,-0.48727983,-0.48336595,-0.47945207,-0.47553813,-0.47162426,-0.46771038,-0.4637965,-0.45988256,-0.45596868,-0.4520548,-0.44814092,-0.44422698,-0.4403131,-0.43639922,-0.43248534,-0.4285714,-0.42465752,-0.42074364,-0.41682976,-0.41291583,-0.40900195,-0.40508807,-0.4011742,-0.39726025,-0.39334637,-0.3894325,-0.3855186,-0.38160467,-0.3776908,-0.3737769,-0.36986303,-0.3659491,-0.3620352,-0.35812134,-0.35420746,-0.35029352,-0.34637964,-0.34246576,-0.33855188,-0.33463794,-0.33072406,-0.32681018,-0.3228963,-0.31898236,-0.31506848,-0.3111546,-0.30724072,-0.3033268,-0.2994129,-0.29549903,-0.29158515,-0.2876712,-0.28375733,-0.27984345,-0.27592957,-0.27201563,-0.26810175,-0.26418787,-0.260274,-0.25636005,-0.25244617,-0.2485323,-0.24461842,-0.24070448,-0.2367906,-0.23287672,-0.22896284,-0.2250489,-0.22113502,-0.21722114,-0.21330726,-0.20939332,-0.20547944,-0.20156556,-0.19765168,-0.19373775,-0.18982387,-0.18590999,-0.1819961,-0.17808217,-0.17416829,-0.17025441,-0.16634053,-0.16242659,-0.15851271,-0.15459883,-0.15068495,-0.14677101,-0.14285713,-0.13894325,-0.13502938,-0.13111544,-0.12720156,-0.12328768,-0.1193738,-0.11545986,-0.11154598,-0.1076321,-0.10371822,-0.09980428,-0.0958904,-0.09197652,-0.088062644,-0.084148705,-0.080234826,-0.076320946,-0.07240707,-0.06849313,-0.06457925,-0.06066537,-0.05675149,-0.05283755,-0.04892367,-0.04500979,-0.041095912,-0.037181973,-0.033268094,-0.029354215,-0.025440335,-0.021526396,-0.017612517,-0.0136986375,-0.009784758,-0.005870819,-0.0019569397,0.0019569397,0.005870819,0.0097846985,0.013698578,0.017612576,0.021526456,0.025440335,0.029354215,0.033268094,0.037181973,0.041095853,0.045009732,0.04892373,0.05283761,0.05675149,0.06066537,0.06457925,0.06849313,0.07240701,0.07632089,0.080234885,0.084148765,0.088062644,0.09197652,0.0958904,0.09980428,0.10371816,0.10763204,0.11154604,0.11545992,0.1193738,0.12328768,0.12720156,0.13111544,0.13502932,0.1389432,0.1428572,0.14677107,0.15068495,0.15459883,0.15851271,0.16242659,0.16634047,0.17025435,0.17416835,0.17808223,0.1819961,0.18590999,0.18982387,0.19373775,0.19765162,0.2015655,0.2054795,0.20939338,0.21330726,0.21722114,0.22113502,0.2250489,0.22896278,0.23287666,0.23679066,0.24070454,0.24461842,0.2485323,0.25244617,0.25636005,0.26027393,0.2641878,0.2681018,0.2720157,0.27592957,0.27984345,0.28375733,0.2876712,0.2915851,0.29549897,0.29941297,0.30332685,0.30724072,0.3111546,0.31506848,0.31898236,0.32289624,0.32681012,0.33072412,0.334638,0.33855188,0.34246576,0.34637964,0.35029352,0.3542074,0.35812128,0.36203527,0.36594915,0.36986303,0.3737769,0.3776908,0.38160467,0.38551855,0.38943243,0.39334643,0.3972603,0.4011742,0.40508807,0.40900195,0.41291583,0.4168297,0.42074358,0.42465758,0.42857146,0.43248534,0.43639922,0.4403131,0.44422698,0.44814086,0.45205474,0.45596874,0.45988262,0.4637965,0.46771038,0.47162426,0.47553813,0.479452,0.4833659,0.4872799,0.49119377,0.49510765,0.49902153,0.5029354,0.5068493,0.51076317,0.51467705,0.51859105,0.5225049,0.5264188,0.5303327,0.53424656,0.53816044,0.5420743,0.5459882,0.5499022,0.5538161,0.55772996,0.5616438,0.56555766,0.56947154,0.5733854,0.5772993,0.5812133,0.5851272,0.58904105,0.5929549,0.59686875,0.60078263,0.60469645,0.6086103,0.6125243,0.6164381,0.6203519,0.62426573,0.6281795,0.63209325,0.636007,0.63992065,0.6438345,0.6477481,0.6516617,0.6555752,0.6594887,0.6634021,0.66731536,0.6712285,0.6751417,0.67905456,0.6829672,0.6868797,0.6907919,0.69470376,0.69861525,0.70252633,0.706437,0.71034694,0.7142562,0.7181646,0.7220721,0.72597843,0.7298835,0.7337869,0.73768866,0.74158823,0.7454853,0.7493795,0.7532704,0.7571574,0.76103985,0.76491714,0.76878846,0.7726526,0.77650857,0.7803551,0.7841907,0.78801376,0.7918222,0.7956137,0.79938596,0.8031357,0.8068596,0.81055385,0.8142139,0.81783473,0.82141036,0.82493424,0.8283988,0.8317951,0.83511335,0.83834213,0.84146863,0.8444781,0.8473538,0.85007674,0.85262537,0.85497487,0.8570975,0.85896164,0.86053133,0.8617658,0.86261916,0.863039,0.8629664,0.86233455,0.8610679,0.85908115,0.856278,0.85254985,0.84777415,0.84181243,0.83450884,0.8256885,0.81515366,0.80268216,0.78802425,0.77089924,0.75099146,0.72794676,0.70136696,0.67080724,0.63576674,0.5956851,0.5499342,0.4978109,0.4385282,0.3712055,0.29485568,0.20838311,0.11055553,0.0
];
const RAMP_TABLE: [f32; 512] =[
    1.0,0.9960861,0.99217224,0.9882583,0.9843444,0.98043054,0.9765166,0.9726027,0.96868885,0.96477497,0.9608611,0.95694715,0.95303327,0.9491194,0.94520545,0.9412916,0.9373777,0.9334638,0.92954993,0.925636,0.9217221,0.91780823,0.9138943,0.9099804,0.90606654,0.90215266,0.8982388,0.89432484,0.89041096,0.8864971,0.88258314,0.87866926,0.8747554,0.8708415,0.8669276,0.8630137,0.8590998,0.8551859,0.851272,0.8473581,0.8434442,0.83953035,0.83561647,0.83170253,0.82778865,0.8238748,0.81996083,0.81604695,0.8121331,0.8082192,0.8043053,0.8003914,0.7964775,0.7925636,0.7886497,0.7847358,0.7808219,0.77690804,0.77299416,0.7690802,0.76516634,0.76125246,0.7573385,0.75342464,0.74951077,0.7455969,0.741683,0.73776907,0.7338552,0.72994125,0.72602737,0.7221135,0.7181996,0.71428573,0.71037185,0.7064579,0.70254403,0.6986301,0.6947162,0.69080234,0.68688846,0.6829746,0.6790607,0.67514676,0.6712329,0.66731894,0.66340506,0.6594912,0.6555773,0.6516634,0.64774954,0.6438356,0.6399217,0.6360078,0.6320939,0.62818,0.62426615,0.62035227,0.6164384,0.61252445,0.6086106,0.60469663,0.60078275,0.5968689,0.592955,0.5890411,0.58512723,0.5812133,0.5772994,0.5733855,0.5694716,0.5655577,0.56164384,0.55772996,0.5538161,0.54990214,0.54598826,0.5420743,0.53816044,0.53424656,0.5303327,0.5264188,0.5225049,0.518591,0.5146771,0.51076317,0.5068493,0.5029354,0.49902153,0.49510765,0.4911937,0.48727983,0.48336595,0.47945207,0.47553813,0.47162426,0.46771038,0.4637965,0.45988256,0.45596868,0.4520548,0.44814092,0.44422698,0.4403131,0.43639922,0.43248534,0.4285714,0.42465752,0.42074364,0.41682976,0.41291583,0.40900195,0.40508807,0.4011742,0.39726025,0.39334637,0.3894325,0.3855186,0.38160467,0.3776908,0.3737769,0.36986303,0.3659491,0.3620352,0.35812134,0.35420746,0.35029352,0.34637964,0.34246576,0.33855188,0.33463794,0.33072406,0.32681018,0.3228963,0.31898236,0.31506848,0.3111546,0.30724072,0.3033268,0.2994129,0.29549903,0.29158515,0.2876712,0.28375733,0.27984345,0.27592957,0.27201563,0.26810175,0.26418787,0.260274,0.25636005,0.25244617,0.2485323,0.24461842,0.24070448,0.2367906,0.23287672,0.22896284,0.2250489,0.22113502,0.21722114,0.21330726,0.20939332,0.20547944,0.20156556,0.19765168,0.19373775,0.18982387,0.18590999,0.1819961,0.17808217,0.17416829,0.17025441,0.16634053,0.16242659,0.15851271,0.15459883,0.15068495,0.14677101,0.14285713,0.13894325,0.13502938,0.13111544,0.12720156,0.12328768,0.1193738,0.11545986,0.11154598,0.1076321,0.10371822,0.09980428,0.0958904,0.09197652,0.088062644,0.084148705,0.080234826,0.076320946,0.07240707,0.06849313,0.06457925,0.06066537,0.05675149,0.05283755,0.04892367,0.04500979,0.041095912,0.037181973,0.033268094,0.029354215,0.025440335,0.021526396,0.017612517,0.0136986375,0.009784758,0.005870819,0.0019569397,-0.0019569397,-0.005870819,-0.0097846985,-0.013698578,-0.017612576,-0.021526456,-0.025440335,-0.029354215,-0.033268094,-0.037181973,-0.041095853,-0.045009732,-0.04892373,-0.05283761,-0.05675149,-0.06066537,-0.06457925,-0.06849313,-0.07240701,-0.07632089,-0.080234885,-0.084148765,-0.088062644,-0.09197652,-0.0958904,-0.09980428,-0.10371816,-0.10763204,-0.11154604,-0.11545992,-0.1193738,-0.12328768,-0.12720156,-0.13111544,-0.13502932,-0.1389432,-0.1428572,-0.14677107,-0.15068495,-0.15459883,-0.15851271,-0.16242659,-0.16634047,-0.17025435,-0.17416835,-0.17808223,-0.1819961,-0.18590999,-0.18982387,-0.19373775,-0.19765162,-0.2015655,-0.2054795,-0.20939338,-0.21330726,-0.21722114,-0.22113502,-0.2250489,-0.22896278,-0.23287666,-0.23679066,-0.24070454,-0.24461842,-0.2485323,-0.25244617,-0.25636005,-0.26027393,-0.2641878,-0.2681018,-0.2720157,-0.27592957,-0.27984345,-0.28375733,-0.2876712,-0.2915851,-0.29549897,-0.29941297,-0.30332685,-0.30724072,-0.3111546,-0.31506848,-0.31898236,-0.32289624,-0.32681012,-0.33072412,-0.334638,-0.33855188,-0.34246576,-0.34637964,-0.35029352,-0.3542074,-0.35812128,-0.36203527,-0.36594915,-0.36986303,-0.3737769,-0.3776908,-0.38160467,-0.38551855,-0.38943243,-0.39334643,-0.3972603,-0.4011742,-0.40508807,-0.40900195,-0.41291583,-0.4168297,-0.42074358,-0.42465758,-0.42857146,-0.43248534,-0.43639922,-0.4403131,-0.44422698,-0.44814086,-0.45205474,-0.45596874,-0.45988262,-0.4637965,-0.46771038,-0.47162426,-0.47553813,-0.479452,-0.4833659,-0.4872799,-0.49119377,-0.49510765,-0.49902153,-0.5029354,-0.5068493,-0.51076317,-0.51467705,-0.51859105,-0.5225049,-0.5264188,-0.5303327,-0.53424656,-0.53816044,-0.5420743,-0.5459882,-0.5499022,-0.5538161,-0.55772996,-0.56164384,-0.5655577,-0.5694716,-0.5733855,-0.57729936,-0.58121336,-0.58512723,-0.5890411,-0.592955,-0.5968689,-0.60078275,-0.60469663,-0.6086105,-0.6125245,-0.6164384,-0.62035227,-0.62426615,-0.62818,-0.6320939,-0.6360078,-0.63992167,-0.64383566,-0.64774954,-0.6516634,-0.6555773,-0.6594912,-0.66340506,-0.66731894,-0.6712328,-0.6751468,-0.6790607,-0.6829746,-0.68688846,-0.69080234,-0.6947162,-0.6986301,-0.702544,-0.706458,-0.71037185,-0.71428573,-0.7181996,-0.7221135,-0.72602737,-0.72994125,-0.7338551,-0.7377691,-0.741683,-0.7455969,-0.74951077,-0.75342464,-0.7573385,-0.7612524,-0.7651663,-0.7690803,-0.77299416,-0.77690804,-0.7808219,-0.7847358,-0.7886497,-0.79256356,-0.79647744,-0.80039144,-0.8043053,-0.8082192,-0.8121331,-0.81604695,-0.81996083,-0.8238747,-0.8277886,-0.8317026,-0.83561647,-0.83953035,-0.8434442,-0.8473581,-0.851272,-0.85518587,-0.85909975,-0.86301374,-0.8669276,-0.8708415,-0.8747554,-0.87866926,-0.88258314,-0.886497,-0.8904109,-0.8943249,-0.8982388,-0.90215266,-0.90606654,-0.9099804,-0.9138943,-0.9178082,-0.92172205,-0.92563605,-0.92954993,-0.9334638,-0.9373777,-0.9412916,-0.94520545,-0.9491193,-0.9530332,-0.9569472,-0.9608611,-0.96477497,-0.96868885,-0.9726027,-0.9765166,-0.9804305,-0.98434436,-0.98825836,-0.99217224,-0.9960861,-1.0
];
const SQUARE_TABLE: [f32; 512] =[
    1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0
];
const PULSE_TABLE: [f32; 512] =[

];
const RSQUARE_TABLE: [f32; 512] =[
    0.0,-0.030945301,-0.061166763,-0.09067625,-0.11948413,-0.14760202,-0.17504138,-0.20181257,-0.22792679,-0.25339496,-0.2782278,-0.30243623,-0.32603025,-0.34902066,-0.37141806,-0.39323223,-0.4144736,-0.4351523,-0.45527834,-0.4748621,-0.49391264,-0.5124401,-0.5304544,-0.5479647,-0.5649804,-0.58151126,-0.5975664,-0.61315536,-0.62828684,-0.64296985,-0.6572138,-0.671027,-0.68441856,-0.6973969,-0.70997083,-0.722149,-0.73393935,-0.74535036,-0.7563906,-0.7670677,-0.7773899,-0.7873652,-0.7970014,-0.8063065,-0.81528777,-0.82395303,-0.83230996,-0.84036565,-0.8481275,-0.8556028,-0.86279875,-0.86972237,-0.8763805,-0.88278013,-0.88892806,-0.8948309,-0.9004952,-0.9059276,-0.9111345,-0.9161222,-0.9208969,-0.9254648,-0.929832,-0.93400437,-0.9379878,-0.94178814,-0.9454111,-0.94886225,-0.9521471,-0.9552712,-0.9582397,-0.96105784,-0.963731,-0.96626407,-0.9686621,-0.9709299,-0.9730724,-0.9750942,-0.977,-0.9787942,-0.9804813,-0.98206574,-0.9835517,-0.98494333,-0.98624474,-0.9874599,-0.98859274,-0.989647,-0.99062645,-0.9915347,-0.99237525,-0.99315166,-0.99386716,-0.99452513,-0.99512863,-0.9956808,-0.9961847,-0.9966431,-0.9970589,-0.99743485,-0.9977736,-0.9980776,-0.9983493,-0.9985912,-0.9988054,-0.9989943,-0.99915975,-0.999304,-0.99942875,-0.999536,-0.9996273,-0.9997045,-0.999769,-0.99982226,-0.9998658,-0.99990076,-0.9999284,-0.9999499,-0.9999661,-0.999978,-0.99998647,-0.9999922,-0.9999959,-0.9999981,-0.9999993,-0.99999976,-0.99999994,-1.0,-1.0,-1.0,-0.9999999,-0.9999996,-0.99999875,-0.99999714,-0.9999943,-0.9999896,-0.9999826,-0.9999725,-0.9999586,-0.99993986,-0.9999155,-0.99988425,-0.9998452,-0.9997969,-0.9997382,-0.9996676,-0.9995835,-0.9994844,-0.99936867,-0.99923444,-0.9990798,-0.9989029,-0.99870163,-0.9984738,-0.99821734,-0.99792975,-0.9976087,-0.99725175,-0.99685615,-0.99641937,-0.9959386,-0.995411,-0.99483347,-0.99420315,-0.9935168,-0.99277127,-0.9919632,-0.9910892,-0.99014586,-0.9891294,-0.98803633,-0.98686284,-0.98560506,-0.98425907,-0.98282075,-0.9812861,-0.97965086,-0.97791076,-0.9760613,-0.9740981,-0.9720165,-0.969812,-0.96747965,-0.9650147,-0.96241224,-0.9596672,-0.9567745,-0.9537289,-0.95052516,-0.94715786,-0.94362146,-0.93991053,-0.9360193,-0.93194216,-0.9276731,-0.9232063,-0.91853577,-0.91365534,-0.90855885,-0.90324,-0.89769244,-0.8919097,-0.8858851,-0.8796122,-0.8730842,-0.8662942,-0.8592353,-0.8519005,-0.84428287,-0.836375,-0.8281695,-0.8196595,-0.8108371,-0.8016949,-0.7922252,-0.7824204,-0.77227265,-0.761774,-0.7509163,-0.7396918,-0.7280921,-0.71610904,-0.7037339,-0.69095886,-0.6777749,-0.6641737,-0.6501461,-0.63568383,-0.6207777,-0.6054188,-0.58959776,-0.5733059,-0.5565337,-0.53927195,-0.5215107,-0.5032412,-0.48445332,-0.46513766,-0.44528383,-0.42488265,-0.40392387,-0.38239735,-0.36029273,-0.3376003,-0.31430936,-0.29040974,-0.26589018,-0.24074101,-0.2149511,-0.18850976,-0.16140568,-0.1336286,-0.10516715,-0.07601011,-0.046145797,-0.015563846,0.015563846,0.046145797,0.07600963,0.10516667,0.13362908,0.16140616,0.18850976,0.2149511,0.24074101,0.26589018,0.29040933,0.31430906,0.33760065,0.3602931,0.38239735,0.40392387,0.42488265,0.44528383,0.4651373,0.48445308,0.5032415,0.52151096,0.53927195,0.5565337,0.5733059,0.58959776,0.60541856,0.6207775,0.6356841,0.6501463,0.6641737,0.6777749,0.69095886,0.7037339,0.7161088,0.7280919,0.7396919,0.7509165,0.761774,0.77227265,0.7824204,0.7922252,0.80169475,0.810837,0.8196596,0.8281697,0.836375,0.84428287,0.8519005,0.8592353,0.8662941,0.87308407,0.8796123,0.8858852,0.8919097,0.89769244,0.90324,0.90855885,0.9136553,0.9185357,0.9232064,0.9276731,0.93194216,0.9360193,0.93991053,0.94362146,0.9471578,0.9505251,0.9537289,0.95677453,0.9596672,0.96241224,0.9650147,0.96747965,0.9698119,0.9720165,0.9740981,0.9760613,0.97791076,0.97965086,0.9812861,0.98282075,0.98425907,0.98560506,0.9868629,0.9880364,0.9891294,0.99014586,0.9910892,0.9919632,0.99277127,0.9935168,0.99420315,0.99483347,0.995411,0.9959386,0.99641937,0.99685615,0.99725175,0.9976087,0.99792975,0.99821734,0.9984738,0.99870163,0.9989029,0.9990798,0.99923444,0.99936867,0.9994844,0.9995835,0.9996676,0.9997382,0.9997969,0.9998452,0.99988425,0.9999155,0.99993986,0.9999586,0.9999725,0.9999826,0.9999896,0.9999943,0.99999714,0.99999875,0.9999996,0.9999999,1.0,1.0,1.0,0.99999994,0.99999976,0.9999993,0.9999981,0.9999959,0.9999922,0.99998647,0.999978,0.9999661,0.9999499,0.9999284,0.99990076,0.9998658,0.99982226,0.999769,0.9997045,0.9996273,0.999536,0.99942875,0.999304,0.99915975,0.9989943,0.9988054,0.9985912,0.9983493,0.9980776,0.9977736,0.99743485,0.9970589,0.9966431,0.9961847,0.9956808,0.99512863,0.99452513,0.99386716,0.99315166,0.99237525,0.9915347,0.99062645,0.989647,0.98859274,0.9874599,0.98624474,0.98494333,0.9835517,0.98206574,0.9804813,0.9787942,0.977,0.9750942,0.9730724,0.9709299,0.9686621,0.96626407,0.963731,0.96105784,0.9582397,0.9552712,0.9521472,0.94886225,0.9454111,0.94178814,0.9379878,0.93400437,0.929832,0.92546487,0.92089695,0.91612214,0.9111345,0.9059276,0.9004952,0.8948309,0.88892806,0.88278025,0.8763806,0.86972225,0.86279875,0.8556028,0.8481275,0.84036565,0.83230996,0.82395315,0.81528795,0.80630636,0.7970014,0.7873652,0.7773899,0.7670677,0.7563906,0.7453506,0.7339395,0.7221488,0.70997083,0.6973969,0.68441856,0.671027,0.6572138,0.6429701,0.628287,0.6131552,0.5975664,0.58151126,0.5649804,0.5479647,0.5304544,0.5124403,0.49391294,0.4748618,0.45527834,0.4351523,0.4144736,0.39323223,0.37141806,0.34902102,0.32603067,0.30243593,0.2782278,0.25339496,0.22792679,0.20181257,0.17504138,0.14760244,0.1194846,0.09067583,0.061166763,0.030945301,0.0
];
const TRI_TABLE: [f32; 512] =[
    0.0,0.007827789,0.015655577,0.023483366,0.031311154,0.039138943,0.04696673,0.05479452,0.06262231,0.0704501,0.078277886,0.086105675,0.09393346,0.10176125,0.10958904,0.11741683,0.12524462,0.1330724,0.1409002,0.14872798,0.15655577,0.16438356,0.17221135,0.18003914,0.18786693,0.19569471,0.20352252,0.21135029,0.21917808,0.22700587,0.23483367,0.24266145,0.25048923,0.25831705,0.2661448,0.27397257,0.2818004,0.28962818,0.29745597,0.30528376,0.31311154,0.32093933,0.32876712,0.3365949,0.34442267,0.35225046,0.3600783,0.36790606,0.37573385,0.38356164,0.3913895,0.39921725,0.40704495,0.4148728,0.42270058,0.43052837,0.43835622,0.44618395,0.45401174,0.46183953,0.4696673,0.47749513,0.48532286,0.49315068,0.50097847,0.5088062,0.51663405,0.5244619,0.5322896,0.5401175,0.54794514,0.555773,0.5636008,0.57142854,0.57925636,0.5870841,0.59491193,0.60273975,0.6105675,0.6183953,0.6262231,0.6340509,0.64187866,0.6497065,0.65753424,0.665362,0.6731898,0.68101764,0.6888454,0.6966732,0.704501,0.71232873,0.72015655,0.72798437,0.7358121,0.7436398,0.75146765,0.75929546,0.7671233,0.7749511,0.782779,0.7906067,0.79843444,0.8062622,0.8140899,0.8219178,0.8297456,0.8375733,0.8454011,0.85322887,0.86105675,0.8688846,0.8767123,0.88454014,0.89236796,0.9001958,0.90802336,0.91585124,0.9236792,0.93150693,0.93933463,0.94716233,0.9549903,0.96281797,0.9706455,0.9784739,0.9863011,0.99413073,0.99804634,0.9902143,0.98238766,0.9745598,0.96673167,0.9589042,0.95107627,0.9432484,0.93542063,0.92759305,0.9197649,0.91193736,0.9041094,0.89628166,0.8884539,0.88062626,0.8727983,0.8649705,0.8571428,0.849315,0.8414872,0.83365947,0.8258315,0.81800383,0.8101761,0.80234826,0.7945205,0.7866927,0.77886486,0.7710371,0.7632092,0.75538146,0.74755377,0.739726,0.7318981,0.7240704,0.7162425,0.7084148,0.70058703,0.6927592,0.6849314,0.6771037,0.66927594,0.661448,0.6536203,0.6457925,0.63796467,0.63013697,0.6223091,0.6144814,0.6066536,0.5988257,0.59099793,0.58317024,0.5753424,0.5675146,0.5596869,0.551859,0.54403114,0.5362035,0.5283756,0.5205479,0.5127201,0.50489223,0.4970645,0.48923683,0.48140895,0.47358108,0.46575344,0.4579256,0.45009768,0.44227,0.43444216,0.42661443,0.41878662,0.41095874,0.40313104,0.39530334,0.38747552,0.3796476,0.3718199,0.36399207,0.35616425,0.34833655,0.34050867,0.33268097,0.32485315,0.31702542,0.30919757,0.30136988,0.29354206,0.28571418,0.27788648,0.27005866,0.26223078,0.25440308,0.24657522,0.23874752,0.23091967,0.22309197,0.21526413,0.20743643,0.19960856,0.19178072,0.18395302,0.17612517,0.16829732,0.16046962,0.15264176,0.14481406,0.13698623,0.12915851,0.121330656,0.11350296,0.10567511,0.09784725,0.090019554,0.082191706,0.07436385,0.06653615,0.0587083,0.050880603,0.043052748,0.035225052,0.027397199,0.019569498,0.011741647,0.003913794,-0.003913906,-0.011741757,-0.019569458,-0.02739716,-0.035225164,-0.043053016,-0.050880715,-0.058708414,-0.06653626,-0.07436397,-0.08219182,-0.09001952,-0.09784752,-0.10567522,-0.113503076,-0.121330775,-0.12915862,-0.13698633,-0.14481403,-0.15264188,-0.16046987,-0.16829757,-0.17612529,-0.18395314,-0.19178084,-0.19960867,-0.20743638,-0.21526408,-0.22309211,-0.23091994,-0.23874764,-0.24657536,-0.2544032,-0.2622309,-0.27005875,-0.27788645,-0.28571445,-0.29354215,-0.30137,-0.3091977,-0.31702554,-0.32485327,-0.33268094,-0.34050882,-0.3483368,-0.35616452,-0.3639922,-0.3718201,-0.37964773,-0.38747564,-0.39530328,-0.40313104,-0.410959,-0.41878688,-0.42661458,-0.43444228,-0.44227013,-0.45009783,-0.45792568,-0.46575338,-0.4735814,-0.4814091,-0.48923695,-0.49706462,-0.50489235,-0.51272017,-0.52054787,-0.5283757,-0.53620374,-0.54403144,-0.55185914,-0.55968684,-0.56751484,-0.57534254,-0.58317024,-0.59099793,-0.59882593,-0.60665363,-0.6144817,-0.6223094,-0.6301371,-0.63796467,-0.6457925,-0.65362006,-0.6614482,-0.6692762,-0.6771038,-0.6849316,-0.6927593,-0.7005869,-0.7084149,-0.7162427,-0.72407067,-0.7318983,-0.739726,-0.74755377,-0.75538176,-0.7632094,-0.7710373,-0.77886486,-0.78669286,-0.7945205,-0.8023485,-0.8101762,-0.818004,-0.8258316,-0.8336593,-0.8414871,-0.849315,-0.85714316,-0.86497074,-0.87279856,-0.88062626,-0.8884539,-0.8962819,-0.90410966,-0.91193765,-0.9197652,-0.92759305,-0.93542063,-0.9432488,-0.95107627,-0.9589042,-0.96673167,-0.9745598,-0.98238766,-0.9902143,-0.99804634,-0.99413073,-0.9863011,-0.9784739,-0.9706455,-0.96281797,-0.9549898,-0.94716233,-0.93933463,-0.93150693,-0.9236792,-0.91585124,-0.90802336,-0.90019554,-0.8923677,-0.88454014,-0.8767123,-0.86888427,-0.86105657,-0.85322887,-0.8454012,-0.8375732,-0.8297455,-0.8219175,-0.81408983,-0.80626214,-0.79843444,-0.79060674,-0.78277904,-0.774951,-0.7671229,-0.7592952,-0.7514675,-0.7436398,-0.7358121,-0.72798413,-0.72015655,-0.7123285,-0.7045008,-0.69667304,-0.6888454,-0.6810174,-0.6731897,-0.665362,-0.65753424,-0.6497063,-0.6418786,-0.6340509,-0.62622285,-0.6183952,-0.6105675,-0.60273975,-0.59491205,-0.5870841,-0.579256,-0.5714284,-0.56360066,-0.555773,-0.54794526,-0.54011726,-0.53228956,-0.52446157,-0.51663387,-0.5088061,-0.50097847,-0.4931504,-0.4853228,-0.47749504,-0.46966735,-0.46183938,-0.45401165,-0.44618395,-0.43835595,-0.43052825,-0.42270055,-0.41487285,-0.4070452,-0.39921713,-0.39138913,-0.38356146,-0.37573373,-0.367906,-0.36007833,-0.35225034,-0.34442267,-0.33659464,-0.32876694,-0.32093924,-0.31311154,-0.30528352,-0.29745582,-0.28962812,-0.28180042,-0.27397242,-0.26614472,-0.25831705,-0.25048903,-0.24266131,-0.23483361,-0.22700594,-0.21917824,-0.21135022,-0.2035222,-0.1956945,-0.18786684,-0.18003911,-0.17221141,-0.16438341,-0.15655571,-0.1487277,-0.1409,-0.1330723,-0.1252446,-0.1174166,-0.10958891,-0.10176121,-0.0939335,-0.086105496,-0.0782778,-0.070450105,-0.0626221,-0.054794393,-0.046966698,-0.039138995,-0.031311296,-0.023483293,-0.01565529,-0.007827589,0.00000011131013,
];

#[derive(Enum, PartialEq, Eq, Debug, Copy, Clone)]
pub enum OscState {
    Off,
    Attacking,
    Decaying,
    Sustaining,
    Releasing,
}

#[derive(Enum, PartialEq, Eq, Debug, Copy, Clone, Deserialize, Serialize)]
pub enum SmoothStyle {
    Linear,
    Logarithmic,
    LogSteep,
    Exponential,
}

#[derive(Enum, PartialEq, Eq, Debug, Copy, Clone, Deserialize, Serialize)]
pub enum RetriggerStyle {
    Free,
    Retrigger,
    Random,
    UniRandom,
}

// Super useful function to scale an input 0-1 into other ranges
/*
pub(crate) fn scale_range(input: f32, min_output: f32, max_output: f32) -> f32 {
    let scaled = input * (max_output - min_output) + min_output;
    scaled.clamp(min_output, max_output)
}
*/

// Sine wave oscillator with lerp smoothing
pub fn get_sine(phase: f32) -> f32 {
    let index = (phase * (TABLE_SIZE - 1) as f32) as usize;
    let frac = phase * (TABLE_SIZE - 1) as f32 - index as f32;
    let next_index = index + 1;

    let sine = if next_index < TABLE_SIZE - 1 {
        SIN_TABLE[index] * (1.0 - frac) + SIN_TABLE[next_index] * frac
    } else {
        SIN_TABLE[index] // If next_index is out of bounds, use the current index
    };
    sine
}

// Rounded Saw Wave with rounding amount
pub fn get_rsaw(phase: f32) -> f32 {
    let index = (phase * (TABLE_SIZE - 1) as f32) as usize;
    return RSAW_TABLE[index];
}

// Rounded Saw Wave with analog-ey modification
pub fn get_rasaw(phase: f32) -> f32 {
    let index = (phase * (TABLE_SIZE - 1) as f32) as usize;
    let mut rng = rand::thread_rng();
    let random_int: u32 = rng.gen_range(0..=2);
    // Based on our int, use the three seed-noise tables
    match random_int {
        0 => {
            return ASAW_TABLE_1[index];
        }
        1 => {
            return ASAW_TABLE_2[index];
        }
        2 => {
            return ASAW_TABLE_3[index];
        }
        _ => {
            return 0.0;
        }
    }
}

// Saw Wave
pub fn get_saw(phase: f32) -> f32 {
    let index = (phase * (TABLE_SIZE - 1) as f32) as usize;
    return SAW_TABLE[index];
}

// "Analog" inspired "whiter" Saw wave
pub fn get_wsaw(phase: f32) -> f32 {
    let index = (phase * (TABLE_SIZE - 1) as f32) as usize;
    let mut rng = rand::thread_rng();
    let random_bool: bool = rng.gen();
    // Based on our random bool, obtain the Saw waveforms with seed-introduced randomness waveform tables
    if random_bool {
        return WSAW_TABLE_1[index];
    } else {
        return WSAW_TABLE_2[index];
    }
}

// "Analog" inspired "subtle warm" Saw wave
pub fn get_ssaw(phase: f32) -> f32 {
    let index = (phase * (TABLE_SIZE - 1) as f32) as usize;
    let mut rng = rand::thread_rng();
    let random_bool: bool = rng.gen();
    // Based on our random bool, obtain the Saw waveforms with seed-introduced randomness waveform tables
    if random_bool {
        return SSAW_TABLE_1[index];
    } else {
        return SSAW_TABLE_2[index];
    }
}

// Ramp Wave
pub fn get_ramp(phase: f32) -> f32 {
    let index = (phase * (TABLE_SIZE - 1) as f32) as usize;
    return RAMP_TABLE[index];
}

// Square Wave
pub fn get_square(phase: f32) -> f32 {
    let index = (phase * (TABLE_SIZE - 1) as f32) as usize;
    return SQUARE_TABLE[index];
}

// 1/4 Pulse Wave
pub fn get_pulse(phase: f32) -> f32 {
    let index = (phase * (TABLE_SIZE - 1) as f32) as usize;
    return PULSE_TABLE[index];
}

pub fn get_rsquare(phase: f32) -> f32 {
    let index = (phase * (TABLE_SIZE - 1) as f32) as usize;
    return RSQUARE_TABLE[index];
}

pub fn get_tri(phase: f32) -> f32 {
    let index = (phase * (TABLE_SIZE - 1) as f32) as usize;
    return TRI_TABLE[index];
}

// Bard helped me out on this one
#[derive(Clone)]
pub struct DeterministicWhiteNoiseGenerator {
    seed: u64,
}

impl DeterministicWhiteNoiseGenerator {
    pub fn new(seed: u64) -> Self {
        // Magic number seed I made up to have same noise pattern every time
        DeterministicWhiteNoiseGenerator { seed }
    }

    pub fn generate_sample(&mut self) -> f32 {
        let random_value = self.xorshift();
        // Scale the random value to be between -1.0 and 1.0
        let sample = (random_value as f32 / u64::MAX as f32) * 2.0 - 1.0;
        sample
    }

    fn xorshift(&mut self) -> u64 {
        let mut x = self.seed;
        x ^= x << 21;
        x ^= x >> 35;
        x ^= x << 4;
        self.seed = x;
        x
    }
}
